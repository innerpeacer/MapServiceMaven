// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t_y_property_pbf.proto

package innerpeacer.mapdata.pbf;

@SuppressWarnings({"unused","unchecked"})
public final class TYPropertyPbf {
  private TYPropertyPbf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TYIndoorFeaturePropertisPbfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string geoID = 1;</code>
     */
    boolean hasGeoID();
    /**
     * <code>required string geoID = 1;</code>
     */
    java.lang.String getGeoID();
    /**
     * <code>required string geoID = 1;</code>
     */
    com.google.protobuf.ByteString
        getGeoIDBytes();

    /**
     * <code>required string poiID = 2;</code>
     */
    boolean hasPoiID();
    /**
     * <code>required string poiID = 2;</code>
     */
    java.lang.String getPoiID();
    /**
     * <code>required string poiID = 2;</code>
     */
    com.google.protobuf.ByteString
        getPoiIDBytes();

    /**
     * <code>optional string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string categoryID = 4;</code>
     */
    boolean hasCategoryID();
    /**
     * <code>optional string categoryID = 4;</code>
     */
    java.lang.String getCategoryID();
    /**
     * <code>optional string categoryID = 4;</code>
     */
    com.google.protobuf.ByteString
        getCategoryIDBytes();

    /**
     * <code>optional uint32 symbolID = 5;</code>
     */
    boolean hasSymbolID();
    /**
     * <code>optional uint32 symbolID = 5;</code>
     */
    int getSymbolID();

    /**
     * <code>optional uint32 levelMin = 6;</code>
     */
    boolean hasLevelMin();
    /**
     * <code>optional uint32 levelMin = 6;</code>
     */
    int getLevelMin();

    /**
     * <code>optional uint32 levelMax = 7;</code>
     */
    boolean hasLevelMax();
    /**
     * <code>optional uint32 levelMax = 7;</code>
     */
    int getLevelMax();

    /**
     * <code>optional double labelX = 8;</code>
     */
    boolean hasLabelX();
    /**
     * <code>optional double labelX = 8;</code>
     */
    double getLabelX();

    /**
     * <code>optional double labelY = 9;</code>
     */
    boolean hasLabelY();
    /**
     * <code>optional double labelY = 9;</code>
     */
    double getLabelY();

    /**
     * <code>optional int32 floor = 10;</code>
     */
    boolean hasFloor();
    /**
     * <code>optional int32 floor = 10;</code>
     */
    int getFloor();

    /**
     * <code>optional bool extrusion = 11;</code>
     */
    boolean hasExtrusion();
    /**
     * <code>optional bool extrusion = 11;</code>
     */
    boolean getExtrusion();

    /**
     * <code>optional float extrusionHeight = 12;</code>
     */
    boolean hasExtrusionHeight();
    /**
     * <code>optional float extrusionHeight = 12;</code>
     */
    float getExtrusionHeight();

    /**
     * <pre>
     *optional float extrusionFillOpacity = 13;
     * </pre>
     *
     * <code>optional float extrusionBase = 13;</code>
     */
    boolean hasExtrusionBase();
    /**
     * <pre>
     *optional float extrusionFillOpacity = 13;
     * </pre>
     *
     * <code>optional float extrusionBase = 13;</code>
     */
    float getExtrusionBase();

    /**
     * <code>optional string fillColor = 20;</code>
     */
    boolean hasFillColor();
    /**
     * <code>optional string fillColor = 20;</code>
     */
    java.lang.String getFillColor();
    /**
     * <code>optional string fillColor = 20;</code>
     */
    com.google.protobuf.ByteString
        getFillColorBytes();

    /**
     * <code>optional float fillOpacity = 21;</code>
     */
    boolean hasFillOpacity();
    /**
     * <code>optional float fillOpacity = 21;</code>
     */
    float getFillOpacity();

    /**
     * <code>optional string outlineColor = 22;</code>
     */
    boolean hasOutlineColor();
    /**
     * <code>optional string outlineColor = 22;</code>
     */
    java.lang.String getOutlineColor();
    /**
     * <code>optional string outlineColor = 22;</code>
     */
    com.google.protobuf.ByteString
        getOutlineColorBytes();

    /**
     * <code>optional float outlineWidth = 23;</code>
     */
    boolean hasOutlineWidth();
    /**
     * <code>optional float outlineWidth = 23;</code>
     */
    float getOutlineWidth();

    /**
     * <code>optional string imageNormal = 24;</code>
     */
    boolean hasImageNormal();
    /**
     * <code>optional string imageNormal = 24;</code>
     */
    java.lang.String getImageNormal();
    /**
     * <code>optional string imageNormal = 24;</code>
     */
    com.google.protobuf.ByteString
        getImageNormalBytes();

    /**
     * <code>optional string imageHighlighted = 25;</code>
     */
    boolean hasImageHighlighted();
    /**
     * <code>optional string imageHighlighted = 25;</code>
     */
    java.lang.String getImageHighlighted();
    /**
     * <code>optional string imageHighlighted = 25;</code>
     */
    com.google.protobuf.ByteString
        getImageHighlightedBytes();
  }
  /**
   * Protobuf type {@code innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf}
   */
  public  static final class TYIndoorFeaturePropertisPbf extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf)
      TYIndoorFeaturePropertisPbfOrBuilder {
    // Use TYIndoorFeaturePropertisPbf.newBuilder() to construct.
    private TYIndoorFeaturePropertisPbf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TYIndoorFeaturePropertisPbf() {
      geoID_ = "";
      poiID_ = "";
      name_ = "";
      categoryID_ = "";
      symbolID_ = 0;
      levelMin_ = 0;
      levelMax_ = 0;
      labelX_ = 0D;
      labelY_ = 0D;
      floor_ = 0;
      extrusion_ = false;
      extrusionHeight_ = 0F;
      extrusionBase_ = 0F;
      fillColor_ = "";
      fillOpacity_ = 0F;
      outlineColor_ = "";
      outlineWidth_ = 0F;
      imageNormal_ = "";
      imageHighlighted_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TYIndoorFeaturePropertisPbf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              geoID_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              poiID_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              name_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              categoryID_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              symbolID_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              levelMin_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              levelMax_ = input.readUInt32();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              labelX_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              labelY_ = input.readDouble();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              floor_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              extrusion_ = input.readBool();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              extrusionHeight_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              extrusionBase_ = input.readFloat();
              break;
            }
            case 162: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              fillColor_ = bs;
              break;
            }
            case 173: {
              bitField0_ |= 0x00004000;
              fillOpacity_ = input.readFloat();
              break;
            }
            case 178: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00008000;
              outlineColor_ = bs;
              break;
            }
            case 189: {
              bitField0_ |= 0x00010000;
              outlineWidth_ = input.readFloat();
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00020000;
              imageNormal_ = bs;
              break;
            }
            case 202: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00040000;
              imageHighlighted_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return innerpeacer.mapdata.pbf.TYPropertyPbf.internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return innerpeacer.mapdata.pbf.TYPropertyPbf.internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.class, innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.Builder.class);
    }

    private int bitField0_;
    public static final int GEOID_FIELD_NUMBER = 1;
    private volatile java.lang.Object geoID_;
    /**
     * <code>required string geoID = 1;</code>
     */
    public boolean hasGeoID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string geoID = 1;</code>
     */
    public java.lang.String getGeoID() {
      java.lang.Object ref = geoID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          geoID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string geoID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGeoIDBytes() {
      java.lang.Object ref = geoID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        geoID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POIID_FIELD_NUMBER = 2;
    private volatile java.lang.Object poiID_;
    /**
     * <code>required string poiID = 2;</code>
     */
    public boolean hasPoiID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string poiID = 2;</code>
     */
    public java.lang.String getPoiID() {
      java.lang.Object ref = poiID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          poiID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string poiID = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPoiIDBytes() {
      java.lang.Object ref = poiID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        poiID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORYID_FIELD_NUMBER = 4;
    private volatile java.lang.Object categoryID_;
    /**
     * <code>optional string categoryID = 4;</code>
     */
    public boolean hasCategoryID() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string categoryID = 4;</code>
     */
    public java.lang.String getCategoryID() {
      java.lang.Object ref = categoryID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          categoryID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string categoryID = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCategoryIDBytes() {
      java.lang.Object ref = categoryID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        categoryID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOLID_FIELD_NUMBER = 5;
    private int symbolID_;
    /**
     * <code>optional uint32 symbolID = 5;</code>
     */
    public boolean hasSymbolID() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 symbolID = 5;</code>
     */
    public int getSymbolID() {
      return symbolID_;
    }

    public static final int LEVELMIN_FIELD_NUMBER = 6;
    private int levelMin_;
    /**
     * <code>optional uint32 levelMin = 6;</code>
     */
    public boolean hasLevelMin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 levelMin = 6;</code>
     */
    public int getLevelMin() {
      return levelMin_;
    }

    public static final int LEVELMAX_FIELD_NUMBER = 7;
    private int levelMax_;
    /**
     * <code>optional uint32 levelMax = 7;</code>
     */
    public boolean hasLevelMax() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 levelMax = 7;</code>
     */
    public int getLevelMax() {
      return levelMax_;
    }

    public static final int LABELX_FIELD_NUMBER = 8;
    private double labelX_;
    /**
     * <code>optional double labelX = 8;</code>
     */
    public boolean hasLabelX() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double labelX = 8;</code>
     */
    public double getLabelX() {
      return labelX_;
    }

    public static final int LABELY_FIELD_NUMBER = 9;
    private double labelY_;
    /**
     * <code>optional double labelY = 9;</code>
     */
    public boolean hasLabelY() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional double labelY = 9;</code>
     */
    public double getLabelY() {
      return labelY_;
    }

    public static final int FLOOR_FIELD_NUMBER = 10;
    private int floor_;
    /**
     * <code>optional int32 floor = 10;</code>
     */
    public boolean hasFloor() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 floor = 10;</code>
     */
    public int getFloor() {
      return floor_;
    }

    public static final int EXTRUSION_FIELD_NUMBER = 11;
    private boolean extrusion_;
    /**
     * <code>optional bool extrusion = 11;</code>
     */
    public boolean hasExtrusion() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool extrusion = 11;</code>
     */
    public boolean getExtrusion() {
      return extrusion_;
    }

    public static final int EXTRUSIONHEIGHT_FIELD_NUMBER = 12;
    private float extrusionHeight_;
    /**
     * <code>optional float extrusionHeight = 12;</code>
     */
    public boolean hasExtrusionHeight() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float extrusionHeight = 12;</code>
     */
    public float getExtrusionHeight() {
      return extrusionHeight_;
    }

    public static final int EXTRUSIONBASE_FIELD_NUMBER = 13;
    private float extrusionBase_;
    /**
     * <pre>
     *optional float extrusionFillOpacity = 13;
     * </pre>
     *
     * <code>optional float extrusionBase = 13;</code>
     */
    public boolean hasExtrusionBase() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     *optional float extrusionFillOpacity = 13;
     * </pre>
     *
     * <code>optional float extrusionBase = 13;</code>
     */
    public float getExtrusionBase() {
      return extrusionBase_;
    }

    public static final int FILLCOLOR_FIELD_NUMBER = 20;
    private volatile java.lang.Object fillColor_;
    /**
     * <code>optional string fillColor = 20;</code>
     */
    public boolean hasFillColor() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string fillColor = 20;</code>
     */
    public java.lang.String getFillColor() {
      java.lang.Object ref = fillColor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fillColor_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fillColor = 20;</code>
     */
    public com.google.protobuf.ByteString
        getFillColorBytes() {
      java.lang.Object ref = fillColor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fillColor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILLOPACITY_FIELD_NUMBER = 21;
    private float fillOpacity_;
    /**
     * <code>optional float fillOpacity = 21;</code>
     */
    public boolean hasFillOpacity() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float fillOpacity = 21;</code>
     */
    public float getFillOpacity() {
      return fillOpacity_;
    }

    public static final int OUTLINECOLOR_FIELD_NUMBER = 22;
    private volatile java.lang.Object outlineColor_;
    /**
     * <code>optional string outlineColor = 22;</code>
     */
    public boolean hasOutlineColor() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string outlineColor = 22;</code>
     */
    public java.lang.String getOutlineColor() {
      java.lang.Object ref = outlineColor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          outlineColor_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string outlineColor = 22;</code>
     */
    public com.google.protobuf.ByteString
        getOutlineColorBytes() {
      java.lang.Object ref = outlineColor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outlineColor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OUTLINEWIDTH_FIELD_NUMBER = 23;
    private float outlineWidth_;
    /**
     * <code>optional float outlineWidth = 23;</code>
     */
    public boolean hasOutlineWidth() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float outlineWidth = 23;</code>
     */
    public float getOutlineWidth() {
      return outlineWidth_;
    }

    public static final int IMAGENORMAL_FIELD_NUMBER = 24;
    private volatile java.lang.Object imageNormal_;
    /**
     * <code>optional string imageNormal = 24;</code>
     */
    public boolean hasImageNormal() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string imageNormal = 24;</code>
     */
    public java.lang.String getImageNormal() {
      java.lang.Object ref = imageNormal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          imageNormal_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string imageNormal = 24;</code>
     */
    public com.google.protobuf.ByteString
        getImageNormalBytes() {
      java.lang.Object ref = imageNormal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imageNormal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMAGEHIGHLIGHTED_FIELD_NUMBER = 25;
    private volatile java.lang.Object imageHighlighted_;
    /**
     * <code>optional string imageHighlighted = 25;</code>
     */
    public boolean hasImageHighlighted() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string imageHighlighted = 25;</code>
     */
    public java.lang.String getImageHighlighted() {
      java.lang.Object ref = imageHighlighted_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          imageHighlighted_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string imageHighlighted = 25;</code>
     */
    public com.google.protobuf.ByteString
        getImageHighlightedBytes() {
      java.lang.Object ref = imageHighlighted_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imageHighlighted_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasGeoID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPoiID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, geoID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, poiID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, categoryID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, symbolID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, levelMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, levelMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, labelX_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, labelY_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, floor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, extrusion_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, extrusionHeight_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, extrusionBase_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, fillColor_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(21, fillOpacity_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, outlineColor_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(23, outlineWidth_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, imageNormal_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 25, imageHighlighted_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, geoID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, poiID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, categoryID_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, symbolID_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, levelMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, levelMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, labelX_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, labelY_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, floor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, extrusion_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, extrusionHeight_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, extrusionBase_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, fillColor_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, fillOpacity_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, outlineColor_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(23, outlineWidth_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, imageNormal_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, imageHighlighted_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf)) {
        return super.equals(obj);
      }
      innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf other = (innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf) obj;

      boolean result = true;
      result = result && (hasGeoID() == other.hasGeoID());
      if (hasGeoID()) {
        result = result && getGeoID()
            .equals(other.getGeoID());
      }
      result = result && (hasPoiID() == other.hasPoiID());
      if (hasPoiID()) {
        result = result && getPoiID()
            .equals(other.getPoiID());
      }
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasCategoryID() == other.hasCategoryID());
      if (hasCategoryID()) {
        result = result && getCategoryID()
            .equals(other.getCategoryID());
      }
      result = result && (hasSymbolID() == other.hasSymbolID());
      if (hasSymbolID()) {
        result = result && (getSymbolID()
            == other.getSymbolID());
      }
      result = result && (hasLevelMin() == other.hasLevelMin());
      if (hasLevelMin()) {
        result = result && (getLevelMin()
            == other.getLevelMin());
      }
      result = result && (hasLevelMax() == other.hasLevelMax());
      if (hasLevelMax()) {
        result = result && (getLevelMax()
            == other.getLevelMax());
      }
      result = result && (hasLabelX() == other.hasLabelX());
      if (hasLabelX()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLabelX())
            == java.lang.Double.doubleToLongBits(
                other.getLabelX()));
      }
      result = result && (hasLabelY() == other.hasLabelY());
      if (hasLabelY()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getLabelY())
            == java.lang.Double.doubleToLongBits(
                other.getLabelY()));
      }
      result = result && (hasFloor() == other.hasFloor());
      if (hasFloor()) {
        result = result && (getFloor()
            == other.getFloor());
      }
      result = result && (hasExtrusion() == other.hasExtrusion());
      if (hasExtrusion()) {
        result = result && (getExtrusion()
            == other.getExtrusion());
      }
      result = result && (hasExtrusionHeight() == other.hasExtrusionHeight());
      if (hasExtrusionHeight()) {
        result = result && (
            java.lang.Float.floatToIntBits(getExtrusionHeight())
            == java.lang.Float.floatToIntBits(
                other.getExtrusionHeight()));
      }
      result = result && (hasExtrusionBase() == other.hasExtrusionBase());
      if (hasExtrusionBase()) {
        result = result && (
            java.lang.Float.floatToIntBits(getExtrusionBase())
            == java.lang.Float.floatToIntBits(
                other.getExtrusionBase()));
      }
      result = result && (hasFillColor() == other.hasFillColor());
      if (hasFillColor()) {
        result = result && getFillColor()
            .equals(other.getFillColor());
      }
      result = result && (hasFillOpacity() == other.hasFillOpacity());
      if (hasFillOpacity()) {
        result = result && (
            java.lang.Float.floatToIntBits(getFillOpacity())
            == java.lang.Float.floatToIntBits(
                other.getFillOpacity()));
      }
      result = result && (hasOutlineColor() == other.hasOutlineColor());
      if (hasOutlineColor()) {
        result = result && getOutlineColor()
            .equals(other.getOutlineColor());
      }
      result = result && (hasOutlineWidth() == other.hasOutlineWidth());
      if (hasOutlineWidth()) {
        result = result && (
            java.lang.Float.floatToIntBits(getOutlineWidth())
            == java.lang.Float.floatToIntBits(
                other.getOutlineWidth()));
      }
      result = result && (hasImageNormal() == other.hasImageNormal());
      if (hasImageNormal()) {
        result = result && getImageNormal()
            .equals(other.getImageNormal());
      }
      result = result && (hasImageHighlighted() == other.hasImageHighlighted());
      if (hasImageHighlighted()) {
        result = result && getImageHighlighted()
            .equals(other.getImageHighlighted());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGeoID()) {
        hash = (37 * hash) + GEOID_FIELD_NUMBER;
        hash = (53 * hash) + getGeoID().hashCode();
      }
      if (hasPoiID()) {
        hash = (37 * hash) + POIID_FIELD_NUMBER;
        hash = (53 * hash) + getPoiID().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasCategoryID()) {
        hash = (37 * hash) + CATEGORYID_FIELD_NUMBER;
        hash = (53 * hash) + getCategoryID().hashCode();
      }
      if (hasSymbolID()) {
        hash = (37 * hash) + SYMBOLID_FIELD_NUMBER;
        hash = (53 * hash) + getSymbolID();
      }
      if (hasLevelMin()) {
        hash = (37 * hash) + LEVELMIN_FIELD_NUMBER;
        hash = (53 * hash) + getLevelMin();
      }
      if (hasLevelMax()) {
        hash = (37 * hash) + LEVELMAX_FIELD_NUMBER;
        hash = (53 * hash) + getLevelMax();
      }
      if (hasLabelX()) {
        hash = (37 * hash) + LABELX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLabelX()));
      }
      if (hasLabelY()) {
        hash = (37 * hash) + LABELY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getLabelY()));
      }
      if (hasFloor()) {
        hash = (37 * hash) + FLOOR_FIELD_NUMBER;
        hash = (53 * hash) + getFloor();
      }
      if (hasExtrusion()) {
        hash = (37 * hash) + EXTRUSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExtrusion());
      }
      if (hasExtrusionHeight()) {
        hash = (37 * hash) + EXTRUSIONHEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getExtrusionHeight());
      }
      if (hasExtrusionBase()) {
        hash = (37 * hash) + EXTRUSIONBASE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getExtrusionBase());
      }
      if (hasFillColor()) {
        hash = (37 * hash) + FILLCOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getFillColor().hashCode();
      }
      if (hasFillOpacity()) {
        hash = (37 * hash) + FILLOPACITY_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFillOpacity());
      }
      if (hasOutlineColor()) {
        hash = (37 * hash) + OUTLINECOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getOutlineColor().hashCode();
      }
      if (hasOutlineWidth()) {
        hash = (37 * hash) + OUTLINEWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOutlineWidth());
      }
      if (hasImageNormal()) {
        hash = (37 * hash) + IMAGENORMAL_FIELD_NUMBER;
        hash = (53 * hash) + getImageNormal().hashCode();
      }
      if (hasImageHighlighted()) {
        hash = (37 * hash) + IMAGEHIGHLIGHTED_FIELD_NUMBER;
        hash = (53 * hash) + getImageHighlighted().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf)
        innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return innerpeacer.mapdata.pbf.TYPropertyPbf.internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return innerpeacer.mapdata.pbf.TYPropertyPbf.internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.class, innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.Builder.class);
      }

      // Construct using innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        geoID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        poiID_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        categoryID_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        symbolID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        levelMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        levelMax_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        labelX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        labelY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        floor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        extrusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        extrusionHeight_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        extrusionBase_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        fillColor_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        fillOpacity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        outlineColor_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        outlineWidth_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        imageNormal_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        imageHighlighted_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return innerpeacer.mapdata.pbf.TYPropertyPbf.internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_descriptor;
      }

      public innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf getDefaultInstanceForType() {
        return innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.getDefaultInstance();
      }

      public innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf build() {
        innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf buildPartial() {
        innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf result = new innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.geoID_ = geoID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.poiID_ = poiID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.categoryID_ = categoryID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.symbolID_ = symbolID_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.levelMin_ = levelMin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.levelMax_ = levelMax_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.labelX_ = labelX_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.labelY_ = labelY_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.floor_ = floor_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.extrusion_ = extrusion_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.extrusionHeight_ = extrusionHeight_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.extrusionBase_ = extrusionBase_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.fillColor_ = fillColor_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fillOpacity_ = fillOpacity_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.outlineColor_ = outlineColor_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.outlineWidth_ = outlineWidth_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.imageNormal_ = imageNormal_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.imageHighlighted_ = imageHighlighted_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf) {
          return mergeFrom((innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf other) {
        if (other == innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf.getDefaultInstance()) return this;
        if (other.hasGeoID()) {
          bitField0_ |= 0x00000001;
          geoID_ = other.geoID_;
          onChanged();
        }
        if (other.hasPoiID()) {
          bitField0_ |= 0x00000002;
          poiID_ = other.poiID_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCategoryID()) {
          bitField0_ |= 0x00000008;
          categoryID_ = other.categoryID_;
          onChanged();
        }
        if (other.hasSymbolID()) {
          setSymbolID(other.getSymbolID());
        }
        if (other.hasLevelMin()) {
          setLevelMin(other.getLevelMin());
        }
        if (other.hasLevelMax()) {
          setLevelMax(other.getLevelMax());
        }
        if (other.hasLabelX()) {
          setLabelX(other.getLabelX());
        }
        if (other.hasLabelY()) {
          setLabelY(other.getLabelY());
        }
        if (other.hasFloor()) {
          setFloor(other.getFloor());
        }
        if (other.hasExtrusion()) {
          setExtrusion(other.getExtrusion());
        }
        if (other.hasExtrusionHeight()) {
          setExtrusionHeight(other.getExtrusionHeight());
        }
        if (other.hasExtrusionBase()) {
          setExtrusionBase(other.getExtrusionBase());
        }
        if (other.hasFillColor()) {
          bitField0_ |= 0x00002000;
          fillColor_ = other.fillColor_;
          onChanged();
        }
        if (other.hasFillOpacity()) {
          setFillOpacity(other.getFillOpacity());
        }
        if (other.hasOutlineColor()) {
          bitField0_ |= 0x00008000;
          outlineColor_ = other.outlineColor_;
          onChanged();
        }
        if (other.hasOutlineWidth()) {
          setOutlineWidth(other.getOutlineWidth());
        }
        if (other.hasImageNormal()) {
          bitField0_ |= 0x00020000;
          imageNormal_ = other.imageNormal_;
          onChanged();
        }
        if (other.hasImageHighlighted()) {
          bitField0_ |= 0x00040000;
          imageHighlighted_ = other.imageHighlighted_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGeoID()) {
          return false;
        }
        if (!hasPoiID()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object geoID_ = "";
      /**
       * <code>required string geoID = 1;</code>
       */
      public boolean hasGeoID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string geoID = 1;</code>
       */
      public java.lang.String getGeoID() {
        java.lang.Object ref = geoID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            geoID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string geoID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGeoIDBytes() {
        java.lang.Object ref = geoID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          geoID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string geoID = 1;</code>
       */
      public Builder setGeoID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        geoID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string geoID = 1;</code>
       */
      public Builder clearGeoID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        geoID_ = getDefaultInstance().getGeoID();
        onChanged();
        return this;
      }
      /**
       * <code>required string geoID = 1;</code>
       */
      public Builder setGeoIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        geoID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object poiID_ = "";
      /**
       * <code>required string poiID = 2;</code>
       */
      public boolean hasPoiID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string poiID = 2;</code>
       */
      public java.lang.String getPoiID() {
        java.lang.Object ref = poiID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            poiID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string poiID = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPoiIDBytes() {
        java.lang.Object ref = poiID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          poiID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string poiID = 2;</code>
       */
      public Builder setPoiID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        poiID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string poiID = 2;</code>
       */
      public Builder clearPoiID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        poiID_ = getDefaultInstance().getPoiID();
        onChanged();
        return this;
      }
      /**
       * <code>required string poiID = 2;</code>
       */
      public Builder setPoiIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        poiID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object categoryID_ = "";
      /**
       * <code>optional string categoryID = 4;</code>
       */
      public boolean hasCategoryID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string categoryID = 4;</code>
       */
      public java.lang.String getCategoryID() {
        java.lang.Object ref = categoryID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            categoryID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string categoryID = 4;</code>
       */
      public com.google.protobuf.ByteString
          getCategoryIDBytes() {
        java.lang.Object ref = categoryID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          categoryID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string categoryID = 4;</code>
       */
      public Builder setCategoryID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        categoryID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string categoryID = 4;</code>
       */
      public Builder clearCategoryID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        categoryID_ = getDefaultInstance().getCategoryID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string categoryID = 4;</code>
       */
      public Builder setCategoryIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        categoryID_ = value;
        onChanged();
        return this;
      }

      private int symbolID_ ;
      /**
       * <code>optional uint32 symbolID = 5;</code>
       */
      public boolean hasSymbolID() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 symbolID = 5;</code>
       */
      public int getSymbolID() {
        return symbolID_;
      }
      /**
       * <code>optional uint32 symbolID = 5;</code>
       */
      public Builder setSymbolID(int value) {
        bitField0_ |= 0x00000010;
        symbolID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 symbolID = 5;</code>
       */
      public Builder clearSymbolID() {
        bitField0_ = (bitField0_ & ~0x00000010);
        symbolID_ = 0;
        onChanged();
        return this;
      }

      private int levelMin_ ;
      /**
       * <code>optional uint32 levelMin = 6;</code>
       */
      public boolean hasLevelMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 levelMin = 6;</code>
       */
      public int getLevelMin() {
        return levelMin_;
      }
      /**
       * <code>optional uint32 levelMin = 6;</code>
       */
      public Builder setLevelMin(int value) {
        bitField0_ |= 0x00000020;
        levelMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 levelMin = 6;</code>
       */
      public Builder clearLevelMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        levelMin_ = 0;
        onChanged();
        return this;
      }

      private int levelMax_ ;
      /**
       * <code>optional uint32 levelMax = 7;</code>
       */
      public boolean hasLevelMax() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 levelMax = 7;</code>
       */
      public int getLevelMax() {
        return levelMax_;
      }
      /**
       * <code>optional uint32 levelMax = 7;</code>
       */
      public Builder setLevelMax(int value) {
        bitField0_ |= 0x00000040;
        levelMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 levelMax = 7;</code>
       */
      public Builder clearLevelMax() {
        bitField0_ = (bitField0_ & ~0x00000040);
        levelMax_ = 0;
        onChanged();
        return this;
      }

      private double labelX_ ;
      /**
       * <code>optional double labelX = 8;</code>
       */
      public boolean hasLabelX() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double labelX = 8;</code>
       */
      public double getLabelX() {
        return labelX_;
      }
      /**
       * <code>optional double labelX = 8;</code>
       */
      public Builder setLabelX(double value) {
        bitField0_ |= 0x00000080;
        labelX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double labelX = 8;</code>
       */
      public Builder clearLabelX() {
        bitField0_ = (bitField0_ & ~0x00000080);
        labelX_ = 0D;
        onChanged();
        return this;
      }

      private double labelY_ ;
      /**
       * <code>optional double labelY = 9;</code>
       */
      public boolean hasLabelY() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional double labelY = 9;</code>
       */
      public double getLabelY() {
        return labelY_;
      }
      /**
       * <code>optional double labelY = 9;</code>
       */
      public Builder setLabelY(double value) {
        bitField0_ |= 0x00000100;
        labelY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double labelY = 9;</code>
       */
      public Builder clearLabelY() {
        bitField0_ = (bitField0_ & ~0x00000100);
        labelY_ = 0D;
        onChanged();
        return this;
      }

      private int floor_ ;
      /**
       * <code>optional int32 floor = 10;</code>
       */
      public boolean hasFloor() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 floor = 10;</code>
       */
      public int getFloor() {
        return floor_;
      }
      /**
       * <code>optional int32 floor = 10;</code>
       */
      public Builder setFloor(int value) {
        bitField0_ |= 0x00000200;
        floor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 floor = 10;</code>
       */
      public Builder clearFloor() {
        bitField0_ = (bitField0_ & ~0x00000200);
        floor_ = 0;
        onChanged();
        return this;
      }

      private boolean extrusion_ ;
      /**
       * <code>optional bool extrusion = 11;</code>
       */
      public boolean hasExtrusion() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool extrusion = 11;</code>
       */
      public boolean getExtrusion() {
        return extrusion_;
      }
      /**
       * <code>optional bool extrusion = 11;</code>
       */
      public Builder setExtrusion(boolean value) {
        bitField0_ |= 0x00000400;
        extrusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool extrusion = 11;</code>
       */
      public Builder clearExtrusion() {
        bitField0_ = (bitField0_ & ~0x00000400);
        extrusion_ = false;
        onChanged();
        return this;
      }

      private float extrusionHeight_ ;
      /**
       * <code>optional float extrusionHeight = 12;</code>
       */
      public boolean hasExtrusionHeight() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float extrusionHeight = 12;</code>
       */
      public float getExtrusionHeight() {
        return extrusionHeight_;
      }
      /**
       * <code>optional float extrusionHeight = 12;</code>
       */
      public Builder setExtrusionHeight(float value) {
        bitField0_ |= 0x00000800;
        extrusionHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float extrusionHeight = 12;</code>
       */
      public Builder clearExtrusionHeight() {
        bitField0_ = (bitField0_ & ~0x00000800);
        extrusionHeight_ = 0F;
        onChanged();
        return this;
      }

      private float extrusionBase_ ;
      /**
       * <pre>
       *optional float extrusionFillOpacity = 13;
       * </pre>
       *
       * <code>optional float extrusionBase = 13;</code>
       */
      public boolean hasExtrusionBase() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       *optional float extrusionFillOpacity = 13;
       * </pre>
       *
       * <code>optional float extrusionBase = 13;</code>
       */
      public float getExtrusionBase() {
        return extrusionBase_;
      }
      /**
       * <pre>
       *optional float extrusionFillOpacity = 13;
       * </pre>
       *
       * <code>optional float extrusionBase = 13;</code>
       */
      public Builder setExtrusionBase(float value) {
        bitField0_ |= 0x00001000;
        extrusionBase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *optional float extrusionFillOpacity = 13;
       * </pre>
       *
       * <code>optional float extrusionBase = 13;</code>
       */
      public Builder clearExtrusionBase() {
        bitField0_ = (bitField0_ & ~0x00001000);
        extrusionBase_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object fillColor_ = "";
      /**
       * <code>optional string fillColor = 20;</code>
       */
      public boolean hasFillColor() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string fillColor = 20;</code>
       */
      public java.lang.String getFillColor() {
        java.lang.Object ref = fillColor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fillColor_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fillColor = 20;</code>
       */
      public com.google.protobuf.ByteString
          getFillColorBytes() {
        java.lang.Object ref = fillColor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fillColor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fillColor = 20;</code>
       */
      public Builder setFillColor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        fillColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fillColor = 20;</code>
       */
      public Builder clearFillColor() {
        bitField0_ = (bitField0_ & ~0x00002000);
        fillColor_ = getDefaultInstance().getFillColor();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fillColor = 20;</code>
       */
      public Builder setFillColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        fillColor_ = value;
        onChanged();
        return this;
      }

      private float fillOpacity_ ;
      /**
       * <code>optional float fillOpacity = 21;</code>
       */
      public boolean hasFillOpacity() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float fillOpacity = 21;</code>
       */
      public float getFillOpacity() {
        return fillOpacity_;
      }
      /**
       * <code>optional float fillOpacity = 21;</code>
       */
      public Builder setFillOpacity(float value) {
        bitField0_ |= 0x00004000;
        fillOpacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fillOpacity = 21;</code>
       */
      public Builder clearFillOpacity() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fillOpacity_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object outlineColor_ = "";
      /**
       * <code>optional string outlineColor = 22;</code>
       */
      public boolean hasOutlineColor() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string outlineColor = 22;</code>
       */
      public java.lang.String getOutlineColor() {
        java.lang.Object ref = outlineColor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            outlineColor_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string outlineColor = 22;</code>
       */
      public com.google.protobuf.ByteString
          getOutlineColorBytes() {
        java.lang.Object ref = outlineColor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outlineColor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string outlineColor = 22;</code>
       */
      public Builder setOutlineColor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        outlineColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string outlineColor = 22;</code>
       */
      public Builder clearOutlineColor() {
        bitField0_ = (bitField0_ & ~0x00008000);
        outlineColor_ = getDefaultInstance().getOutlineColor();
        onChanged();
        return this;
      }
      /**
       * <code>optional string outlineColor = 22;</code>
       */
      public Builder setOutlineColorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        outlineColor_ = value;
        onChanged();
        return this;
      }

      private float outlineWidth_ ;
      /**
       * <code>optional float outlineWidth = 23;</code>
       */
      public boolean hasOutlineWidth() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float outlineWidth = 23;</code>
       */
      public float getOutlineWidth() {
        return outlineWidth_;
      }
      /**
       * <code>optional float outlineWidth = 23;</code>
       */
      public Builder setOutlineWidth(float value) {
        bitField0_ |= 0x00010000;
        outlineWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float outlineWidth = 23;</code>
       */
      public Builder clearOutlineWidth() {
        bitField0_ = (bitField0_ & ~0x00010000);
        outlineWidth_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object imageNormal_ = "";
      /**
       * <code>optional string imageNormal = 24;</code>
       */
      public boolean hasImageNormal() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string imageNormal = 24;</code>
       */
      public java.lang.String getImageNormal() {
        java.lang.Object ref = imageNormal_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            imageNormal_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string imageNormal = 24;</code>
       */
      public com.google.protobuf.ByteString
          getImageNormalBytes() {
        java.lang.Object ref = imageNormal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imageNormal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string imageNormal = 24;</code>
       */
      public Builder setImageNormal(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        imageNormal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string imageNormal = 24;</code>
       */
      public Builder clearImageNormal() {
        bitField0_ = (bitField0_ & ~0x00020000);
        imageNormal_ = getDefaultInstance().getImageNormal();
        onChanged();
        return this;
      }
      /**
       * <code>optional string imageNormal = 24;</code>
       */
      public Builder setImageNormalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        imageNormal_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object imageHighlighted_ = "";
      /**
       * <code>optional string imageHighlighted = 25;</code>
       */
      public boolean hasImageHighlighted() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string imageHighlighted = 25;</code>
       */
      public java.lang.String getImageHighlighted() {
        java.lang.Object ref = imageHighlighted_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            imageHighlighted_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string imageHighlighted = 25;</code>
       */
      public com.google.protobuf.ByteString
          getImageHighlightedBytes() {
        java.lang.Object ref = imageHighlighted_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imageHighlighted_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string imageHighlighted = 25;</code>
       */
      public Builder setImageHighlighted(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        imageHighlighted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string imageHighlighted = 25;</code>
       */
      public Builder clearImageHighlighted() {
        bitField0_ = (bitField0_ & ~0x00040000);
        imageHighlighted_ = getDefaultInstance().getImageHighlighted();
        onChanged();
        return this;
      }
      /**
       * <code>optional string imageHighlighted = 25;</code>
       */
      public Builder setImageHighlightedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        imageHighlighted_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf)
    }

    // @@protoc_insertion_point(class_scope:innerpeacer.mapdata.pbf.TYIndoorFeaturePropertisPbf)
    private static final innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf();
    }

    public static innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TYIndoorFeaturePropertisPbf>
        PARSER = new com.google.protobuf.AbstractParser<TYIndoorFeaturePropertisPbf>() {
      public TYIndoorFeaturePropertisPbf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TYIndoorFeaturePropertisPbf(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TYIndoorFeaturePropertisPbf> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TYIndoorFeaturePropertisPbf> getParserForType() {
      return PARSER;
    }

    public innerpeacer.mapdata.pbf.TYPropertyPbf.TYIndoorFeaturePropertisPbf getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026t_y_property_pbf.proto\022\027innerpeacer.ma" +
      "pdata.pbf\"\210\003\n\033TYIndoorFeaturePropertisPb" +
      "f\022\r\n\005geoID\030\001 \002(\t\022\r\n\005poiID\030\002 \002(\t\022\014\n\004name\030" +
      "\003 \001(\t\022\022\n\ncategoryID\030\004 \001(\t\022\020\n\010symbolID\030\005 " +
      "\001(\r\022\020\n\010levelMin\030\006 \001(\r\022\020\n\010levelMax\030\007 \001(\r\022" +
      "\016\n\006labelX\030\010 \001(\001\022\016\n\006labelY\030\t \001(\001\022\r\n\005floor" +
      "\030\n \001(\005\022\021\n\textrusion\030\013 \001(\010\022\027\n\017extrusionHe" +
      "ight\030\014 \001(\002\022\025\n\rextrusionBase\030\r \001(\002\022\021\n\tfil" +
      "lColor\030\024 \001(\t\022\023\n\013fillOpacity\030\025 \001(\002\022\024\n\014out" +
      "lineColor\030\026 \001(\t\022\024\n\014outlineWidth\030\027 \001(\002\022\023\n",
      "\013imageNormal\030\030 \001(\t\022\030\n\020imageHighlighted\030\031" +
      " \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_innerpeacer_mapdata_pbf_TYIndoorFeaturePropertisPbf_descriptor,
        new java.lang.String[] { "GeoID", "PoiID", "Name", "CategoryID", "SymbolID", "LevelMin", "LevelMax", "LabelX", "LabelY", "Floor", "Extrusion", "ExtrusionHeight", "ExtrusionBase", "FillColor", "FillOpacity", "OutlineColor", "OutlineWidth", "ImageNormal", "ImageHighlighted", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
