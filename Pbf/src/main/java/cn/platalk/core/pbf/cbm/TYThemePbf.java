// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t_y_theme_pbf.proto

package cn.platalk.core.pbf.cbm;

public final class TYThemePbf {
  private TYThemePbf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ThemePbfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cn.platalk.core.pbf.cbm.ThemePbf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string themeID = 1;</code>
     */
    boolean hasThemeID();
    /**
     * <code>required string themeID = 1;</code>
     */
    java.lang.String getThemeID();
    /**
     * <code>required string themeID = 1;</code>
     */
    com.google.protobuf.ByteString
        getThemeIDBytes();

    /**
     * <code>required string themeName = 2;</code>
     */
    boolean hasThemeName();
    /**
     * <code>required string themeName = 2;</code>
     */
    java.lang.String getThemeName();
    /**
     * <code>required string themeName = 2;</code>
     */
    com.google.protobuf.ByteString
        getThemeNameBytes();

    /**
     * <code>required string spriteName = 3;</code>
     */
    boolean hasSpriteName();
    /**
     * <code>required string spriteName = 3;</code>
     */
    java.lang.String getSpriteName();
    /**
     * <code>required string spriteName = 3;</code>
     */
    com.google.protobuf.ByteString
        getSpriteNameBytes();

    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf> 
        getFillSymbolsList();
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf getFillSymbols(int index);
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    int getFillSymbolsCount();
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    java.util.List<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder> 
        getFillSymbolsOrBuilderList();
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder getFillSymbolsOrBuilder(
        int index);

    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf> 
        getIconTextSymbolsList();
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf getIconTextSymbols(int index);
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    int getIconTextSymbolsCount();
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    java.util.List<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder> 
        getIconTextSymbolsOrBuilderList();
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder getIconTextSymbolsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code cn.platalk.core.pbf.cbm.ThemePbf}
   */
  public  static final class ThemePbf extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cn.platalk.core.pbf.cbm.ThemePbf)
      ThemePbfOrBuilder {
    // Use ThemePbf.newBuilder() to construct.
    private ThemePbf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThemePbf() {
      themeID_ = "";
      themeName_ = "";
      spriteName_ = "";
      fillSymbols_ = java.util.Collections.emptyList();
      iconTextSymbols_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ThemePbf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              themeID_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              themeName_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              spriteName_ = bs;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fillSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf>();
                mutable_bitField0_ |= 0x00000008;
              }
              fillSymbols_.add(
                  input.readMessage(cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                iconTextSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf>();
                mutable_bitField0_ |= 0x00000010;
              }
              iconTextSymbols_.add(
                  input.readMessage(cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fillSymbols_ = java.util.Collections.unmodifiableList(fillSymbols_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          iconTextSymbols_ = java.util.Collections.unmodifiableList(iconTextSymbols_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.platalk.core.pbf.cbm.TYThemePbf.internal_static_cn_platalk_core_pbf_cbm_ThemePbf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.platalk.core.pbf.cbm.TYThemePbf.internal_static_cn_platalk_core_pbf_cbm_ThemePbf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.class, cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.Builder.class);
    }

    private int bitField0_;
    public static final int THEMEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object themeID_;
    /**
     * <code>required string themeID = 1;</code>
     */
    public boolean hasThemeID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string themeID = 1;</code>
     */
    public java.lang.String getThemeID() {
      java.lang.Object ref = themeID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          themeID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string themeID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getThemeIDBytes() {
      java.lang.Object ref = themeID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        themeID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int THEMENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object themeName_;
    /**
     * <code>required string themeName = 2;</code>
     */
    public boolean hasThemeName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string themeName = 2;</code>
     */
    public java.lang.String getThemeName() {
      java.lang.Object ref = themeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          themeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string themeName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getThemeNameBytes() {
      java.lang.Object ref = themeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        themeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPRITENAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object spriteName_;
    /**
     * <code>required string spriteName = 3;</code>
     */
    public boolean hasSpriteName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string spriteName = 3;</code>
     */
    public java.lang.String getSpriteName() {
      java.lang.Object ref = spriteName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          spriteName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string spriteName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSpriteNameBytes() {
      java.lang.Object ref = spriteName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        spriteName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILLSYMBOLS_FIELD_NUMBER = 4;
    private java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf> fillSymbols_;
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    public java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf> getFillSymbolsList() {
      return fillSymbols_;
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    public java.util.List<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder> 
        getFillSymbolsOrBuilderList() {
      return fillSymbols_;
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    public int getFillSymbolsCount() {
      return fillSymbols_.size();
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf getFillSymbols(int index) {
      return fillSymbols_.get(index);
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
     */
    public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder getFillSymbolsOrBuilder(
        int index) {
      return fillSymbols_.get(index);
    }

    public static final int ICONTEXTSYMBOLS_FIELD_NUMBER = 5;
    private java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf> iconTextSymbols_;
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    public java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf> getIconTextSymbolsList() {
      return iconTextSymbols_;
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    public java.util.List<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder> 
        getIconTextSymbolsOrBuilderList() {
      return iconTextSymbols_;
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    public int getIconTextSymbolsCount() {
      return iconTextSymbols_.size();
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf getIconTextSymbols(int index) {
      return iconTextSymbols_.get(index);
    }
    /**
     * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
     */
    public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder getIconTextSymbolsOrBuilder(
        int index) {
      return iconTextSymbols_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasThemeID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThemeName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpriteName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFillSymbolsCount(); i++) {
        if (!getFillSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getIconTextSymbolsCount(); i++) {
        if (!getIconTextSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, themeID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, themeName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, spriteName_);
      }
      for (int i = 0; i < fillSymbols_.size(); i++) {
        output.writeMessage(4, fillSymbols_.get(i));
      }
      for (int i = 0; i < iconTextSymbols_.size(); i++) {
        output.writeMessage(5, iconTextSymbols_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, themeID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, themeName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, spriteName_);
      }
      for (int i = 0; i < fillSymbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, fillSymbols_.get(i));
      }
      for (int i = 0; i < iconTextSymbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, iconTextSymbols_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf)) {
        return super.equals(obj);
      }
      cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf other = (cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf) obj;

      boolean result = true;
      result = result && (hasThemeID() == other.hasThemeID());
      if (hasThemeID()) {
        result = result && getThemeID()
            .equals(other.getThemeID());
      }
      result = result && (hasThemeName() == other.hasThemeName());
      if (hasThemeName()) {
        result = result && getThemeName()
            .equals(other.getThemeName());
      }
      result = result && (hasSpriteName() == other.hasSpriteName());
      if (hasSpriteName()) {
        result = result && getSpriteName()
            .equals(other.getSpriteName());
      }
      result = result && getFillSymbolsList()
          .equals(other.getFillSymbolsList());
      result = result && getIconTextSymbolsList()
          .equals(other.getIconTextSymbolsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasThemeID()) {
        hash = (37 * hash) + THEMEID_FIELD_NUMBER;
        hash = (53 * hash) + getThemeID().hashCode();
      }
      if (hasThemeName()) {
        hash = (37 * hash) + THEMENAME_FIELD_NUMBER;
        hash = (53 * hash) + getThemeName().hashCode();
      }
      if (hasSpriteName()) {
        hash = (37 * hash) + SPRITENAME_FIELD_NUMBER;
        hash = (53 * hash) + getSpriteName().hashCode();
      }
      if (getFillSymbolsCount() > 0) {
        hash = (37 * hash) + FILLSYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getFillSymbolsList().hashCode();
      }
      if (getIconTextSymbolsCount() > 0) {
        hash = (37 * hash) + ICONTEXTSYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getIconTextSymbolsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cn.platalk.core.pbf.cbm.ThemePbf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cn.platalk.core.pbf.cbm.ThemePbf)
        cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.platalk.core.pbf.cbm.TYThemePbf.internal_static_cn_platalk_core_pbf_cbm_ThemePbf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.platalk.core.pbf.cbm.TYThemePbf.internal_static_cn_platalk_core_pbf_cbm_ThemePbf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.class, cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.Builder.class);
      }

      // Construct using cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFillSymbolsFieldBuilder();
          getIconTextSymbolsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        themeID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        themeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        spriteName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (fillSymbolsBuilder_ == null) {
          fillSymbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          fillSymbolsBuilder_.clear();
        }
        if (iconTextSymbolsBuilder_ == null) {
          iconTextSymbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          iconTextSymbolsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.platalk.core.pbf.cbm.TYThemePbf.internal_static_cn_platalk_core_pbf_cbm_ThemePbf_descriptor;
      }

      public cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf getDefaultInstanceForType() {
        return cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.getDefaultInstance();
      }

      public cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf build() {
        cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf buildPartial() {
        cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf result = new cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.themeID_ = themeID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.themeName_ = themeName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.spriteName_ = spriteName_;
        if (fillSymbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            fillSymbols_ = java.util.Collections.unmodifiableList(fillSymbols_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.fillSymbols_ = fillSymbols_;
        } else {
          result.fillSymbols_ = fillSymbolsBuilder_.build();
        }
        if (iconTextSymbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            iconTextSymbols_ = java.util.Collections.unmodifiableList(iconTextSymbols_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.iconTextSymbols_ = iconTextSymbols_;
        } else {
          result.iconTextSymbols_ = iconTextSymbolsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf) {
          return mergeFrom((cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf other) {
        if (other == cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf.getDefaultInstance()) return this;
        if (other.hasThemeID()) {
          bitField0_ |= 0x00000001;
          themeID_ = other.themeID_;
          onChanged();
        }
        if (other.hasThemeName()) {
          bitField0_ |= 0x00000002;
          themeName_ = other.themeName_;
          onChanged();
        }
        if (other.hasSpriteName()) {
          bitField0_ |= 0x00000004;
          spriteName_ = other.spriteName_;
          onChanged();
        }
        if (fillSymbolsBuilder_ == null) {
          if (!other.fillSymbols_.isEmpty()) {
            if (fillSymbols_.isEmpty()) {
              fillSymbols_ = other.fillSymbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureFillSymbolsIsMutable();
              fillSymbols_.addAll(other.fillSymbols_);
            }
            onChanged();
          }
        } else {
          if (!other.fillSymbols_.isEmpty()) {
            if (fillSymbolsBuilder_.isEmpty()) {
              fillSymbolsBuilder_.dispose();
              fillSymbolsBuilder_ = null;
              fillSymbols_ = other.fillSymbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
              fillSymbolsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFillSymbolsFieldBuilder() : null;
            } else {
              fillSymbolsBuilder_.addAllMessages(other.fillSymbols_);
            }
          }
        }
        if (iconTextSymbolsBuilder_ == null) {
          if (!other.iconTextSymbols_.isEmpty()) {
            if (iconTextSymbols_.isEmpty()) {
              iconTextSymbols_ = other.iconTextSymbols_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureIconTextSymbolsIsMutable();
              iconTextSymbols_.addAll(other.iconTextSymbols_);
            }
            onChanged();
          }
        } else {
          if (!other.iconTextSymbols_.isEmpty()) {
            if (iconTextSymbolsBuilder_.isEmpty()) {
              iconTextSymbolsBuilder_.dispose();
              iconTextSymbolsBuilder_ = null;
              iconTextSymbols_ = other.iconTextSymbols_;
              bitField0_ = (bitField0_ & ~0x00000010);
              iconTextSymbolsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getIconTextSymbolsFieldBuilder() : null;
            } else {
              iconTextSymbolsBuilder_.addAllMessages(other.iconTextSymbols_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasThemeID()) {
          return false;
        }
        if (!hasThemeName()) {
          return false;
        }
        if (!hasSpriteName()) {
          return false;
        }
        for (int i = 0; i < getFillSymbolsCount(); i++) {
          if (!getFillSymbols(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getIconTextSymbolsCount(); i++) {
          if (!getIconTextSymbols(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object themeID_ = "";
      /**
       * <code>required string themeID = 1;</code>
       */
      public boolean hasThemeID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string themeID = 1;</code>
       */
      public java.lang.String getThemeID() {
        java.lang.Object ref = themeID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            themeID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string themeID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getThemeIDBytes() {
        java.lang.Object ref = themeID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          themeID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string themeID = 1;</code>
       */
      public Builder setThemeID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        themeID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string themeID = 1;</code>
       */
      public Builder clearThemeID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        themeID_ = getDefaultInstance().getThemeID();
        onChanged();
        return this;
      }
      /**
       * <code>required string themeID = 1;</code>
       */
      public Builder setThemeIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        themeID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object themeName_ = "";
      /**
       * <code>required string themeName = 2;</code>
       */
      public boolean hasThemeName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string themeName = 2;</code>
       */
      public java.lang.String getThemeName() {
        java.lang.Object ref = themeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            themeName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string themeName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getThemeNameBytes() {
        java.lang.Object ref = themeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          themeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string themeName = 2;</code>
       */
      public Builder setThemeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        themeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string themeName = 2;</code>
       */
      public Builder clearThemeName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        themeName_ = getDefaultInstance().getThemeName();
        onChanged();
        return this;
      }
      /**
       * <code>required string themeName = 2;</code>
       */
      public Builder setThemeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        themeName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object spriteName_ = "";
      /**
       * <code>required string spriteName = 3;</code>
       */
      public boolean hasSpriteName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string spriteName = 3;</code>
       */
      public java.lang.String getSpriteName() {
        java.lang.Object ref = spriteName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            spriteName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string spriteName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSpriteNameBytes() {
        java.lang.Object ref = spriteName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          spriteName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string spriteName = 3;</code>
       */
      public Builder setSpriteName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        spriteName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string spriteName = 3;</code>
       */
      public Builder clearSpriteName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        spriteName_ = getDefaultInstance().getSpriteName();
        onChanged();
        return this;
      }
      /**
       * <code>required string spriteName = 3;</code>
       */
      public Builder setSpriteNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        spriteName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf> fillSymbols_ =
        java.util.Collections.emptyList();
      private void ensureFillSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fillSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf>(fillSymbols_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder> fillSymbolsBuilder_;

      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf> getFillSymbolsList() {
        if (fillSymbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fillSymbols_);
        } else {
          return fillSymbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public int getFillSymbolsCount() {
        if (fillSymbolsBuilder_ == null) {
          return fillSymbols_.size();
        } else {
          return fillSymbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf getFillSymbols(int index) {
        if (fillSymbolsBuilder_ == null) {
          return fillSymbols_.get(index);
        } else {
          return fillSymbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder setFillSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf value) {
        if (fillSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFillSymbolsIsMutable();
          fillSymbols_.set(index, value);
          onChanged();
        } else {
          fillSymbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder setFillSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder builderForValue) {
        if (fillSymbolsBuilder_ == null) {
          ensureFillSymbolsIsMutable();
          fillSymbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          fillSymbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder addFillSymbols(cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf value) {
        if (fillSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFillSymbolsIsMutable();
          fillSymbols_.add(value);
          onChanged();
        } else {
          fillSymbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder addFillSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf value) {
        if (fillSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFillSymbolsIsMutable();
          fillSymbols_.add(index, value);
          onChanged();
        } else {
          fillSymbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder addFillSymbols(
          cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder builderForValue) {
        if (fillSymbolsBuilder_ == null) {
          ensureFillSymbolsIsMutable();
          fillSymbols_.add(builderForValue.build());
          onChanged();
        } else {
          fillSymbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder addFillSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder builderForValue) {
        if (fillSymbolsBuilder_ == null) {
          ensureFillSymbolsIsMutable();
          fillSymbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          fillSymbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder addAllFillSymbols(
          java.lang.Iterable<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf> values) {
        if (fillSymbolsBuilder_ == null) {
          ensureFillSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fillSymbols_);
          onChanged();
        } else {
          fillSymbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder clearFillSymbols() {
        if (fillSymbolsBuilder_ == null) {
          fillSymbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          fillSymbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public Builder removeFillSymbols(int index) {
        if (fillSymbolsBuilder_ == null) {
          ensureFillSymbolsIsMutable();
          fillSymbols_.remove(index);
          onChanged();
        } else {
          fillSymbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder getFillSymbolsBuilder(
          int index) {
        return getFillSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder getFillSymbolsOrBuilder(
          int index) {
        if (fillSymbolsBuilder_ == null) {
          return fillSymbols_.get(index);  } else {
          return fillSymbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public java.util.List<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder> 
           getFillSymbolsOrBuilderList() {
        if (fillSymbolsBuilder_ != null) {
          return fillSymbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fillSymbols_);
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder addFillSymbolsBuilder() {
        return getFillSymbolsFieldBuilder().addBuilder(
            cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.getDefaultInstance());
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder addFillSymbolsBuilder(
          int index) {
        return getFillSymbolsFieldBuilder().addBuilder(
            index, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.getDefaultInstance());
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.FillSymbolPbf FillSymbols = 4;</code>
       */
      public java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder> 
           getFillSymbolsBuilderList() {
        return getFillSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder> 
          getFillSymbolsFieldBuilder() {
        if (fillSymbolsBuilder_ == null) {
          fillSymbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbf.Builder, cn.platalk.core.pbf.cbm.TYSymbolPbf.FillSymbolPbfOrBuilder>(
                  fillSymbols_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          fillSymbols_ = null;
        }
        return fillSymbolsBuilder_;
      }

      private java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf> iconTextSymbols_ =
        java.util.Collections.emptyList();
      private void ensureIconTextSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          iconTextSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf>(iconTextSymbols_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder> iconTextSymbolsBuilder_;

      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf> getIconTextSymbolsList() {
        if (iconTextSymbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(iconTextSymbols_);
        } else {
          return iconTextSymbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public int getIconTextSymbolsCount() {
        if (iconTextSymbolsBuilder_ == null) {
          return iconTextSymbols_.size();
        } else {
          return iconTextSymbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf getIconTextSymbols(int index) {
        if (iconTextSymbolsBuilder_ == null) {
          return iconTextSymbols_.get(index);
        } else {
          return iconTextSymbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder setIconTextSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf value) {
        if (iconTextSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.set(index, value);
          onChanged();
        } else {
          iconTextSymbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder setIconTextSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder builderForValue) {
        if (iconTextSymbolsBuilder_ == null) {
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          iconTextSymbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder addIconTextSymbols(cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf value) {
        if (iconTextSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.add(value);
          onChanged();
        } else {
          iconTextSymbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder addIconTextSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf value) {
        if (iconTextSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.add(index, value);
          onChanged();
        } else {
          iconTextSymbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder addIconTextSymbols(
          cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder builderForValue) {
        if (iconTextSymbolsBuilder_ == null) {
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.add(builderForValue.build());
          onChanged();
        } else {
          iconTextSymbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder addIconTextSymbols(
          int index, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder builderForValue) {
        if (iconTextSymbolsBuilder_ == null) {
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          iconTextSymbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder addAllIconTextSymbols(
          java.lang.Iterable<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf> values) {
        if (iconTextSymbolsBuilder_ == null) {
          ensureIconTextSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, iconTextSymbols_);
          onChanged();
        } else {
          iconTextSymbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder clearIconTextSymbols() {
        if (iconTextSymbolsBuilder_ == null) {
          iconTextSymbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          iconTextSymbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public Builder removeIconTextSymbols(int index) {
        if (iconTextSymbolsBuilder_ == null) {
          ensureIconTextSymbolsIsMutable();
          iconTextSymbols_.remove(index);
          onChanged();
        } else {
          iconTextSymbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder getIconTextSymbolsBuilder(
          int index) {
        return getIconTextSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder getIconTextSymbolsOrBuilder(
          int index) {
        if (iconTextSymbolsBuilder_ == null) {
          return iconTextSymbols_.get(index);  } else {
          return iconTextSymbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public java.util.List<? extends cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder> 
           getIconTextSymbolsOrBuilderList() {
        if (iconTextSymbolsBuilder_ != null) {
          return iconTextSymbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(iconTextSymbols_);
        }
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder addIconTextSymbolsBuilder() {
        return getIconTextSymbolsFieldBuilder().addBuilder(
            cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.getDefaultInstance());
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder addIconTextSymbolsBuilder(
          int index) {
        return getIconTextSymbolsFieldBuilder().addBuilder(
            index, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.getDefaultInstance());
      }
      /**
       * <code>repeated .cn.platalk.core.pbf.cbm.IconTextSymbolPbf IconTextSymbols = 5;</code>
       */
      public java.util.List<cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder> 
           getIconTextSymbolsBuilderList() {
        return getIconTextSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder> 
          getIconTextSymbolsFieldBuilder() {
        if (iconTextSymbolsBuilder_ == null) {
          iconTextSymbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbf.Builder, cn.platalk.core.pbf.cbm.TYSymbolPbf.IconTextSymbolPbfOrBuilder>(
                  iconTextSymbols_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          iconTextSymbols_ = null;
        }
        return iconTextSymbolsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cn.platalk.core.pbf.cbm.ThemePbf)
    }

    // @@protoc_insertion_point(class_scope:cn.platalk.core.pbf.cbm.ThemePbf)
    private static final cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf();
    }

    public static cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ThemePbf>
        PARSER = new com.google.protobuf.AbstractParser<ThemePbf>() {
      public ThemePbf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ThemePbf(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThemePbf> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThemePbf> getParserForType() {
      return PARSER;
    }

    public cn.platalk.core.pbf.cbm.TYThemePbf.ThemePbf getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cn_platalk_core_pbf_cbm_ThemePbf_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cn_platalk_core_pbf_cbm_ThemePbf_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023t_y_theme_pbf.proto\022\027cn.platalk.core.p" +
      "bf.cbm\032\024t_y_symbol_pbf.proto\"\304\001\n\010ThemePb" +
      "f\022\017\n\007themeID\030\001 \002(\t\022\021\n\tthemeName\030\002 \002(\t\022\022\n" +
      "\nspriteName\030\003 \002(\t\022;\n\013FillSymbols\030\004 \003(\0132&" +
      ".cn.platalk.core.pbf.cbm.FillSymbolPbf\022C" +
      "\n\017IconTextSymbols\030\005 \003(\0132*.cn.platalk.cor" +
      "e.pbf.cbm.IconTextSymbolPbf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.platalk.core.pbf.cbm.TYSymbolPbf.getDescriptor(),
        }, assigner);
    internal_static_cn_platalk_core_pbf_cbm_ThemePbf_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cn_platalk_core_pbf_cbm_ThemePbf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cn_platalk_core_pbf_cbm_ThemePbf_descriptor,
        new java.lang.String[] { "ThemeID", "ThemeName", "SpriteName", "FillSymbols", "IconTextSymbols", });
    cn.platalk.core.pbf.cbm.TYSymbolPbf.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
