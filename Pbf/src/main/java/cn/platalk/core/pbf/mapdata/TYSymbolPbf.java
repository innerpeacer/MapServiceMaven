// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t_y_symbol_pbf.proto

package cn.platalk.core.pbf.mapdata;

@SuppressWarnings(value = { "unused", "unchecked" })
public final class TYSymbolPbf {
	private TYSymbolPbf() {
	}

	public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
	}

	public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
		registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
	}

	public interface TYRenderingSymbolsPbfOrBuilder extends
			// @@protoc_insertion_point(interface_extends:cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required string mapID = 1;</code>
		 */
		boolean hasMapID();

		/**
		 * <code>required string mapID = 1;</code>
		 */
		java.lang.String getMapID();

		/**
		 * <code>required string mapID = 1;</code>
		 */
		com.google.protobuf.ByteString getMapIDBytes();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf> getFillSymbolsList();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf getFillSymbols(int index);

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		int getFillSymbolsCount();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		java.util.List<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder> getFillSymbolsOrBuilderList();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder getFillSymbolsOrBuilder(int index);

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf> getIconSymbolsList();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf getIconSymbols(int index);

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		int getIconSymbolsCount();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		java.util.List<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder> getIconSymbolsOrBuilderList();

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder getIconSymbolsOrBuilder(int index);
	}

	/**
	 * Protobuf type {@code cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf}
	 */
	public static final class TYRenderingSymbolsPbf extends com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf)
			TYRenderingSymbolsPbfOrBuilder {
		// Use TYRenderingSymbolsPbf.newBuilder() to construct.
		private TYRenderingSymbolsPbf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private TYRenderingSymbolsPbf() {
			mapID_ = "";
			fillSymbols_ = java.util.Collections.emptyList();
			iconSymbols_ = java.util.Collections.emptyList();
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private TYRenderingSymbolsPbf(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					default: {
						if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					case 10: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000001;
						mapID_ = bs;
						break;
					}
					case 18: {
						if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
							fillSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf>();
							mutable_bitField0_ |= 0x00000002;
						}
						fillSymbols_.add(input.readMessage(
								cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.PARSER, extensionRegistry));
						break;
					}
					case 26: {
						if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
							iconSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf>();
							mutable_bitField0_ |= 0x00000004;
						}
						iconSymbols_.add(input.readMessage(
								cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.PARSER, extensionRegistry));
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
					fillSymbols_ = java.util.Collections.unmodifiableList(fillSymbols_);
				}
				if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
					iconSymbols_ = java.util.Collections.unmodifiableList(iconSymbols_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_descriptor;
		}

		@Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.class,
							cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.Builder.class);
		}

		private int bitField0_;
		public static final int MAPID_FIELD_NUMBER = 1;
		private volatile java.lang.Object mapID_;

		/**
		 * <code>required string mapID = 1;</code>
		 */
		@Override
		public boolean hasMapID() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required string mapID = 1;</code>
		 */
		@Override
		public java.lang.String getMapID() {
			java.lang.Object ref = mapID_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					mapID_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string mapID = 1;</code>
		 */
		@Override
		public com.google.protobuf.ByteString getMapIDBytes() {
			java.lang.Object ref = mapID_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				mapID_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int FILLSYMBOLS_FIELD_NUMBER = 2;
		private java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf> fillSymbols_;

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		@Override
		public java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf> getFillSymbolsList() {
			return fillSymbols_;
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		@Override
		public java.util.List<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder> getFillSymbolsOrBuilderList() {
			return fillSymbols_;
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		@Override
		public int getFillSymbolsCount() {
			return fillSymbols_.size();
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf getFillSymbols(int index) {
			return fillSymbols_.get(index);
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
		 */
		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder getFillSymbolsOrBuilder(int index) {
			return fillSymbols_.get(index);
		}

		public static final int ICONSYMBOLS_FIELD_NUMBER = 3;
		private java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf> iconSymbols_;

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		@Override
		public java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf> getIconSymbolsList() {
			return iconSymbols_;
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		@Override
		public java.util.List<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder> getIconSymbolsOrBuilderList() {
			return iconSymbols_;
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		@Override
		public int getIconSymbolsCount() {
			return iconSymbols_.size();
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf getIconSymbols(int index) {
			return iconSymbols_.get(index);
		}

		/**
		 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
		 */
		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder getIconSymbolsOrBuilder(int index) {
			return iconSymbols_.get(index);
		}

		private byte memoizedIsInitialized = -1;

		@Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			if (!hasMapID()) {
				memoizedIsInitialized = 0;
				return false;
			}
			for (int i = 0; i < getFillSymbolsCount(); i++) {
				if (!getFillSymbols(i).isInitialized()) {
					memoizedIsInitialized = 0;
					return false;
				}
			}
			for (int i = 0; i < getIconSymbolsCount(); i++) {
				if (!getIconSymbols(i).isInitialized()) {
					memoizedIsInitialized = 0;
					return false;
				}
			}
			memoizedIsInitialized = 1;
			return true;
		}

		@Override
		public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mapID_);
			}
			for (int i = 0; i < fillSymbols_.size(); i++) {
				output.writeMessage(2, fillSymbols_.get(i));
			}
			for (int i = 0; i < iconSymbols_.size(); i++) {
				output.writeMessage(3, iconSymbols_.get(i));
			}
			unknownFields.writeTo(output);
		}

		@Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mapID_);
			}
			for (int i = 0; i < fillSymbols_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, fillSymbols_.get(i));
			}
			for (int i = 0; i < iconSymbols_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, iconSymbols_.get(i));
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		private static final long serialVersionUID = 0L;

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf)) {
				return super.equals(obj);
			}
			cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf other = (cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf) obj;

			boolean result = true;
			result = result && (hasMapID() == other.hasMapID());
			if (hasMapID()) {
				result = result && getMapID().equals(other.getMapID());
			}
			result = result && getFillSymbolsList().equals(other.getFillSymbolsList());
			result = result && getIconSymbolsList().equals(other.getIconSymbolsList());
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasMapID()) {
				hash = (37 * hash) + MAPID_FIELD_NUMBER;
				hash = (53 * hash) + getMapID().hashCode();
			}
			if (getFillSymbolsCount() > 0) {
				hash = (37 * hash) + FILLSYMBOLS_FIELD_NUMBER;
				hash = (53 * hash) + getFillSymbolsList().hashCode();
			}
			if (getIconSymbolsCount() > 0) {
				hash = (37 * hash) + ICONSYMBOLS_FIELD_NUMBER;
				hash = (53 * hash) + getIconSymbolsList().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(
				com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(
				com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseDelimitedFrom(
				java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(
				com.google.protobuf.CodedInputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parseFrom(
				com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type
		 * {@code cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf}
		 */
		public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf)
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbfOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_descriptor;
			}

			@Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.class,
								cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.Builder.class);
			}

			// Construct using
			// cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
					getFillSymbolsFieldBuilder();
					getIconSymbolsFieldBuilder();
				}
			}

			@Override
			public Builder clear() {
				super.clear();
				mapID_ = "";
				bitField0_ = (bitField0_ & ~0x00000001);
				if (fillSymbolsBuilder_ == null) {
					fillSymbols_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000002);
				} else {
					fillSymbolsBuilder_.clear();
				}
				if (iconSymbolsBuilder_ == null) {
					iconSymbols_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000004);
				} else {
					iconSymbolsBuilder_.clear();
				}
				return this;
			}

			@Override
			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_descriptor;
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf getDefaultInstanceForType() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.getDefaultInstance();
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf build() {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf buildPartial() {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf result = new cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.mapID_ = mapID_;
				if (fillSymbolsBuilder_ == null) {
					if (((bitField0_ & 0x00000002) == 0x00000002)) {
						fillSymbols_ = java.util.Collections.unmodifiableList(fillSymbols_);
						bitField0_ = (bitField0_ & ~0x00000002);
					}
					result.fillSymbols_ = fillSymbols_;
				} else {
					result.fillSymbols_ = fillSymbolsBuilder_.build();
				}
				if (iconSymbolsBuilder_ == null) {
					if (((bitField0_ & 0x00000004) == 0x00000004)) {
						iconSymbols_ = java.util.Collections.unmodifiableList(iconSymbols_);
						bitField0_ = (bitField0_ & ~0x00000004);
					}
					result.iconSymbols_ = iconSymbols_;
				} else {
					result.iconSymbols_ = iconSymbolsBuilder_.build();
				}
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@Override
			public Builder clone() {
				return super.clone();
			}

			@Override
			public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
				return super.setField(field, value);
			}

			@Override
			public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
				return super.clearField(field);
			}

			@Override
			public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return super.clearOneof(oneof);
			}

			@Override
			public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
					Object value) {
				return super.setRepeatedField(field, index, value);
			}

			@Override
			public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
				return super.addRepeatedField(field, value);
			}

			@Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf) {
					return mergeFrom((cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf other) {
				if (other == cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf.getDefaultInstance())
					return this;
				if (other.hasMapID()) {
					bitField0_ |= 0x00000001;
					mapID_ = other.mapID_;
					onChanged();
				}
				if (fillSymbolsBuilder_ == null) {
					if (!other.fillSymbols_.isEmpty()) {
						if (fillSymbols_.isEmpty()) {
							fillSymbols_ = other.fillSymbols_;
							bitField0_ = (bitField0_ & ~0x00000002);
						} else {
							ensureFillSymbolsIsMutable();
							fillSymbols_.addAll(other.fillSymbols_);
						}
						onChanged();
					}
				} else {
					if (!other.fillSymbols_.isEmpty()) {
						if (fillSymbolsBuilder_.isEmpty()) {
							fillSymbolsBuilder_.dispose();
							fillSymbolsBuilder_ = null;
							fillSymbols_ = other.fillSymbols_;
							bitField0_ = (bitField0_ & ~0x00000002);
							fillSymbolsBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
									? getFillSymbolsFieldBuilder() : null;
						} else {
							fillSymbolsBuilder_.addAllMessages(other.fillSymbols_);
						}
					}
				}
				if (iconSymbolsBuilder_ == null) {
					if (!other.iconSymbols_.isEmpty()) {
						if (iconSymbols_.isEmpty()) {
							iconSymbols_ = other.iconSymbols_;
							bitField0_ = (bitField0_ & ~0x00000004);
						} else {
							ensureIconSymbolsIsMutable();
							iconSymbols_.addAll(other.iconSymbols_);
						}
						onChanged();
					}
				} else {
					if (!other.iconSymbols_.isEmpty()) {
						if (iconSymbolsBuilder_.isEmpty()) {
							iconSymbolsBuilder_.dispose();
							iconSymbolsBuilder_ = null;
							iconSymbols_ = other.iconSymbols_;
							bitField0_ = (bitField0_ & ~0x00000004);
							iconSymbolsBuilder_ = com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders
									? getIconSymbolsFieldBuilder() : null;
						} else {
							iconSymbolsBuilder_.addAllMessages(other.iconSymbols_);
						}
					}
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@Override
			public final boolean isInitialized() {
				if (!hasMapID()) {
					return false;
				}
				for (int i = 0; i < getFillSymbolsCount(); i++) {
					if (!getFillSymbols(i).isInitialized()) {
						return false;
					}
				}
				for (int i = 0; i < getIconSymbolsCount(); i++) {
					if (!getIconSymbols(i).isInitialized()) {
						return false;
					}
				}
				return true;
			}

			@Override
			public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf) e
							.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private java.lang.Object mapID_ = "";

			/**
			 * <code>required string mapID = 1;</code>
			 */
			@Override
			public boolean hasMapID() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required string mapID = 1;</code>
			 */
			@Override
			public java.lang.String getMapID() {
				java.lang.Object ref = mapID_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						mapID_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string mapID = 1;</code>
			 */
			@Override
			public com.google.protobuf.ByteString getMapIDBytes() {
				java.lang.Object ref = mapID_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					mapID_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string mapID = 1;</code>
			 */
			public Builder setMapID(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				mapID_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string mapID = 1;</code>
			 */
			public Builder clearMapID() {
				bitField0_ = (bitField0_ & ~0x00000001);
				mapID_ = getDefaultInstance().getMapID();
				onChanged();
				return this;
			}

			/**
			 * <code>required string mapID = 1;</code>
			 */
			public Builder setMapIDBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				mapID_ = value;
				onChanged();
				return this;
			}

			private java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf> fillSymbols_ = java.util.Collections
					.emptyList();

			private void ensureFillSymbolsIsMutable() {
				if (!((bitField0_ & 0x00000002) == 0x00000002)) {
					fillSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf>(
							fillSymbols_);
					bitField0_ |= 0x00000002;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder> fillSymbolsBuilder_;

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			@Override
			public java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf> getFillSymbolsList() {
				if (fillSymbolsBuilder_ == null) {
					return java.util.Collections.unmodifiableList(fillSymbols_);
				} else {
					return fillSymbolsBuilder_.getMessageList();
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			@Override
			public int getFillSymbolsCount() {
				if (fillSymbolsBuilder_ == null) {
					return fillSymbols_.size();
				} else {
					return fillSymbolsBuilder_.getCount();
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf getFillSymbols(int index) {
				if (fillSymbolsBuilder_ == null) {
					return fillSymbols_.get(index);
				} else {
					return fillSymbolsBuilder_.getMessage(index);
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder setFillSymbols(int index, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf value) {
				if (fillSymbolsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureFillSymbolsIsMutable();
					fillSymbols_.set(index, value);
					onChanged();
				} else {
					fillSymbolsBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder setFillSymbols(int index,
					cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder builderForValue) {
				if (fillSymbolsBuilder_ == null) {
					ensureFillSymbolsIsMutable();
					fillSymbols_.set(index, builderForValue.build());
					onChanged();
				} else {
					fillSymbolsBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder addFillSymbols(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf value) {
				if (fillSymbolsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureFillSymbolsIsMutable();
					fillSymbols_.add(value);
					onChanged();
				} else {
					fillSymbolsBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder addFillSymbols(int index, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf value) {
				if (fillSymbolsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureFillSymbolsIsMutable();
					fillSymbols_.add(index, value);
					onChanged();
				} else {
					fillSymbolsBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder addFillSymbols(
					cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder builderForValue) {
				if (fillSymbolsBuilder_ == null) {
					ensureFillSymbolsIsMutable();
					fillSymbols_.add(builderForValue.build());
					onChanged();
				} else {
					fillSymbolsBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder addFillSymbols(int index,
					cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder builderForValue) {
				if (fillSymbolsBuilder_ == null) {
					ensureFillSymbolsIsMutable();
					fillSymbols_.add(index, builderForValue.build());
					onChanged();
				} else {
					fillSymbolsBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder addAllFillSymbols(
					java.lang.Iterable<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf> values) {
				if (fillSymbolsBuilder_ == null) {
					ensureFillSymbolsIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(values, fillSymbols_);
					onChanged();
				} else {
					fillSymbolsBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder clearFillSymbols() {
				if (fillSymbolsBuilder_ == null) {
					fillSymbols_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000002);
					onChanged();
				} else {
					fillSymbolsBuilder_.clear();
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public Builder removeFillSymbols(int index) {
				if (fillSymbolsBuilder_ == null) {
					ensureFillSymbolsIsMutable();
					fillSymbols_.remove(index);
					onChanged();
				} else {
					fillSymbolsBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder getFillSymbolsBuilder(int index) {
				return getFillSymbolsFieldBuilder().getBuilder(index);
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder getFillSymbolsOrBuilder(int index) {
				if (fillSymbolsBuilder_ == null) {
					return fillSymbols_.get(index);
				} else {
					return fillSymbolsBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			@Override
			public java.util.List<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder> getFillSymbolsOrBuilderList() {
				if (fillSymbolsBuilder_ != null) {
					return fillSymbolsBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(fillSymbols_);
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder addFillSymbolsBuilder() {
				return getFillSymbolsFieldBuilder()
						.addBuilder(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.getDefaultInstance());
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder addFillSymbolsBuilder(int index) {
				return getFillSymbolsFieldBuilder().addBuilder(index,
						cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.getDefaultInstance());
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYFillSymbolPbf fillSymbols = 2;</code>
			 */
			public java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder> getFillSymbolsBuilderList() {
				return getFillSymbolsFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder> getFillSymbolsFieldBuilder() {
				if (fillSymbolsBuilder_ == null) {
					fillSymbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder>(
							fillSymbols_, ((bitField0_ & 0x00000002) == 0x00000002), getParentForChildren(), isClean());
					fillSymbols_ = null;
				}
				return fillSymbolsBuilder_;
			}

			private java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf> iconSymbols_ = java.util.Collections
					.emptyList();

			private void ensureIconSymbolsIsMutable() {
				if (!((bitField0_ & 0x00000004) == 0x00000004)) {
					iconSymbols_ = new java.util.ArrayList<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf>(
							iconSymbols_);
					bitField0_ |= 0x00000004;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder> iconSymbolsBuilder_;

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			@Override
			public java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf> getIconSymbolsList() {
				if (iconSymbolsBuilder_ == null) {
					return java.util.Collections.unmodifiableList(iconSymbols_);
				} else {
					return iconSymbolsBuilder_.getMessageList();
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			@Override
			public int getIconSymbolsCount() {
				if (iconSymbolsBuilder_ == null) {
					return iconSymbols_.size();
				} else {
					return iconSymbolsBuilder_.getCount();
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf getIconSymbols(int index) {
				if (iconSymbolsBuilder_ == null) {
					return iconSymbols_.get(index);
				} else {
					return iconSymbolsBuilder_.getMessage(index);
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder setIconSymbols(int index, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf value) {
				if (iconSymbolsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureIconSymbolsIsMutable();
					iconSymbols_.set(index, value);
					onChanged();
				} else {
					iconSymbolsBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder setIconSymbols(int index,
					cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder builderForValue) {
				if (iconSymbolsBuilder_ == null) {
					ensureIconSymbolsIsMutable();
					iconSymbols_.set(index, builderForValue.build());
					onChanged();
				} else {
					iconSymbolsBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder addIconSymbols(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf value) {
				if (iconSymbolsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureIconSymbolsIsMutable();
					iconSymbols_.add(value);
					onChanged();
				} else {
					iconSymbolsBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder addIconSymbols(int index, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf value) {
				if (iconSymbolsBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureIconSymbolsIsMutable();
					iconSymbols_.add(index, value);
					onChanged();
				} else {
					iconSymbolsBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder addIconSymbols(
					cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder builderForValue) {
				if (iconSymbolsBuilder_ == null) {
					ensureIconSymbolsIsMutable();
					iconSymbols_.add(builderForValue.build());
					onChanged();
				} else {
					iconSymbolsBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder addIconSymbols(int index,
					cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder builderForValue) {
				if (iconSymbolsBuilder_ == null) {
					ensureIconSymbolsIsMutable();
					iconSymbols_.add(index, builderForValue.build());
					onChanged();
				} else {
					iconSymbolsBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder addAllIconSymbols(
					java.lang.Iterable<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf> values) {
				if (iconSymbolsBuilder_ == null) {
					ensureIconSymbolsIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(values, iconSymbols_);
					onChanged();
				} else {
					iconSymbolsBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder clearIconSymbols() {
				if (iconSymbolsBuilder_ == null) {
					iconSymbols_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00000004);
					onChanged();
				} else {
					iconSymbolsBuilder_.clear();
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public Builder removeIconSymbols(int index) {
				if (iconSymbolsBuilder_ == null) {
					ensureIconSymbolsIsMutable();
					iconSymbols_.remove(index);
					onChanged();
				} else {
					iconSymbolsBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder getIconSymbolsBuilder(int index) {
				return getIconSymbolsFieldBuilder().getBuilder(index);
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder getIconSymbolsOrBuilder(int index) {
				if (iconSymbolsBuilder_ == null) {
					return iconSymbols_.get(index);
				} else {
					return iconSymbolsBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			@Override
			public java.util.List<? extends cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder> getIconSymbolsOrBuilderList() {
				if (iconSymbolsBuilder_ != null) {
					return iconSymbolsBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(iconSymbols_);
				}
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder addIconSymbolsBuilder() {
				return getIconSymbolsFieldBuilder()
						.addBuilder(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.getDefaultInstance());
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder addIconSymbolsBuilder(int index) {
				return getIconSymbolsFieldBuilder().addBuilder(index,
						cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.getDefaultInstance());
			}

			/**
			 * <code>repeated .cn.platalk.core.pbf.mapdata.TYIconSymbolPbf iconSymbols = 3;</code>
			 */
			public java.util.List<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder> getIconSymbolsBuilderList() {
				return getIconSymbolsFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilderV3<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder> getIconSymbolsFieldBuilder() {
				if (iconSymbolsBuilder_ == null) {
					iconSymbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder, cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder>(
							iconSymbols_, ((bitField0_ & 0x00000004) == 0x00000004), getParentForChildren(), isClean());
					iconSymbols_ = null;
				}
				return iconSymbolsBuilder_;
			}

			@Override
			public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFields(unknownFields);
			}

			@Override
			public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf)
		}

		// @@protoc_insertion_point(class_scope:cn.platalk.core.pbf.mapdata.TYRenderingSymbolsPbf)
		private static final cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf();
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		@java.lang.Deprecated
		public static final com.google.protobuf.Parser<TYRenderingSymbolsPbf> PARSER = new com.google.protobuf.AbstractParser<TYRenderingSymbolsPbf>() {
			@Override
			public TYRenderingSymbolsPbf parsePartialFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new TYRenderingSymbolsPbf(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<TYRenderingSymbolsPbf> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<TYRenderingSymbolsPbf> getParserForType() {
			return PARSER;
		}

		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYRenderingSymbolsPbf getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface TYFillSymbolPbfOrBuilder extends
			// @@protoc_insertion_point(interface_extends:cn.platalk.core.pbf.mapdata.TYFillSymbolPbf)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		boolean hasSymbolID();

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		int getSymbolID();

		/**
		 * <code>required string fillColor = 2;</code>
		 */
		boolean hasFillColor();

		/**
		 * <code>required string fillColor = 2;</code>
		 */
		java.lang.String getFillColor();

		/**
		 * <code>required string fillColor = 2;</code>
		 */
		com.google.protobuf.ByteString getFillColorBytes();

		/**
		 * <code>required string outlineColor = 3;</code>
		 */
		boolean hasOutlineColor();

		/**
		 * <code>required string outlineColor = 3;</code>
		 */
		java.lang.String getOutlineColor();

		/**
		 * <code>required string outlineColor = 3;</code>
		 */
		com.google.protobuf.ByteString getOutlineColorBytes();

		/**
		 * <code>required float lineWidth = 4;</code>
		 */
		boolean hasLineWidth();

		/**
		 * <code>required float lineWidth = 4;</code>
		 */
		float getLineWidth();
	}

	/**
	 * Protobuf type {@code cn.platalk.core.pbf.mapdata.TYFillSymbolPbf}
	 */
	public static final class TYFillSymbolPbf extends com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:cn.platalk.core.pbf.mapdata.TYFillSymbolPbf)
			TYFillSymbolPbfOrBuilder {
		// Use TYFillSymbolPbf.newBuilder() to construct.
		private TYFillSymbolPbf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private TYFillSymbolPbf() {
			symbolID_ = 0;
			fillColor_ = "";
			outlineColor_ = "";
			lineWidth_ = 0F;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private TYFillSymbolPbf(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					default: {
						if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					case 8: {
						bitField0_ |= 0x00000001;
						symbolID_ = input.readUInt32();
						break;
					}
					case 18: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000002;
						fillColor_ = bs;
						break;
					}
					case 26: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000004;
						outlineColor_ = bs;
						break;
					}
					case 37: {
						bitField0_ |= 0x00000008;
						lineWidth_ = input.readFloat();
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_descriptor;
		}

		@Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_fieldAccessorTable
					.ensureFieldAccessorsInitialized(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.class,
							cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder.class);
		}

		private int bitField0_;
		public static final int SYMBOLID_FIELD_NUMBER = 1;
		private int symbolID_;

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		@Override
		public boolean hasSymbolID() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		@Override
		public int getSymbolID() {
			return symbolID_;
		}

		public static final int FILLCOLOR_FIELD_NUMBER = 2;
		private volatile java.lang.Object fillColor_;

		/**
		 * <code>required string fillColor = 2;</code>
		 */
		@Override
		public boolean hasFillColor() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}

		/**
		 * <code>required string fillColor = 2;</code>
		 */
		@Override
		public java.lang.String getFillColor() {
			java.lang.Object ref = fillColor_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					fillColor_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string fillColor = 2;</code>
		 */
		@Override
		public com.google.protobuf.ByteString getFillColorBytes() {
			java.lang.Object ref = fillColor_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				fillColor_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int OUTLINECOLOR_FIELD_NUMBER = 3;
		private volatile java.lang.Object outlineColor_;

		/**
		 * <code>required string outlineColor = 3;</code>
		 */
		@Override
		public boolean hasOutlineColor() {
			return ((bitField0_ & 0x00000004) == 0x00000004);
		}

		/**
		 * <code>required string outlineColor = 3;</code>
		 */
		@Override
		public java.lang.String getOutlineColor() {
			java.lang.Object ref = outlineColor_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					outlineColor_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string outlineColor = 3;</code>
		 */
		@Override
		public com.google.protobuf.ByteString getOutlineColorBytes() {
			java.lang.Object ref = outlineColor_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				outlineColor_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int LINEWIDTH_FIELD_NUMBER = 4;
		private float lineWidth_;

		/**
		 * <code>required float lineWidth = 4;</code>
		 */
		@Override
		public boolean hasLineWidth() {
			return ((bitField0_ & 0x00000008) == 0x00000008);
		}

		/**
		 * <code>required float lineWidth = 4;</code>
		 */
		@Override
		public float getLineWidth() {
			return lineWidth_;
		}

		private byte memoizedIsInitialized = -1;

		@Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			if (!hasSymbolID()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasFillColor()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasOutlineColor()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasLineWidth()) {
				memoizedIsInitialized = 0;
				return false;
			}
			memoizedIsInitialized = 1;
			return true;
		}

		@Override
		public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeUInt32(1, symbolID_);
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fillColor_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 3, outlineColor_);
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				output.writeFloat(4, lineWidth_);
			}
			unknownFields.writeTo(output);
		}

		@Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream.computeUInt32Size(1, symbolID_);
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fillColor_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, outlineColor_);
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				size += com.google.protobuf.CodedOutputStream.computeFloatSize(4, lineWidth_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		private static final long serialVersionUID = 0L;

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf)) {
				return super.equals(obj);
			}
			cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf other = (cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf) obj;

			boolean result = true;
			result = result && (hasSymbolID() == other.hasSymbolID());
			if (hasSymbolID()) {
				result = result && (getSymbolID() == other.getSymbolID());
			}
			result = result && (hasFillColor() == other.hasFillColor());
			if (hasFillColor()) {
				result = result && getFillColor().equals(other.getFillColor());
			}
			result = result && (hasOutlineColor() == other.hasOutlineColor());
			if (hasOutlineColor()) {
				result = result && getOutlineColor().equals(other.getOutlineColor());
			}
			result = result && (hasLineWidth() == other.hasLineWidth());
			if (hasLineWidth()) {
				result = result && (java.lang.Float.floatToIntBits(getLineWidth()) == java.lang.Float
						.floatToIntBits(other.getLineWidth()));
			}
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasSymbolID()) {
				hash = (37 * hash) + SYMBOLID_FIELD_NUMBER;
				hash = (53 * hash) + getSymbolID();
			}
			if (hasFillColor()) {
				hash = (37 * hash) + FILLCOLOR_FIELD_NUMBER;
				hash = (53 * hash) + getFillColor().hashCode();
			}
			if (hasOutlineColor()) {
				hash = (37 * hash) + OUTLINECOLOR_FIELD_NUMBER;
				hash = (53 * hash) + getOutlineColor().hashCode();
			}
			if (hasLineWidth()) {
				hash = (37 * hash) + LINEWIDTH_FIELD_NUMBER;
				hash = (53 * hash) + java.lang.Float.floatToIntBits(getLineWidth());
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(
				com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(
				com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseDelimitedFrom(
				java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(
				com.google.protobuf.CodedInputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parseFrom(
				com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code cn.platalk.core.pbf.mapdata.TYFillSymbolPbf}
		 */
		public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:cn.platalk.core.pbf.mapdata.TYFillSymbolPbf)
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbfOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_descriptor;
			}

			@Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_fieldAccessorTable
						.ensureFieldAccessorsInitialized(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.class,
								cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.Builder.class);
			}

			// Construct using
			// cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
				}
			}

			@Override
			public Builder clear() {
				super.clear();
				symbolID_ = 0;
				bitField0_ = (bitField0_ & ~0x00000001);
				fillColor_ = "";
				bitField0_ = (bitField0_ & ~0x00000002);
				outlineColor_ = "";
				bitField0_ = (bitField0_ & ~0x00000004);
				lineWidth_ = 0F;
				bitField0_ = (bitField0_ & ~0x00000008);
				return this;
			}

			@Override
			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_descriptor;
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf getDefaultInstanceForType() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.getDefaultInstance();
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf build() {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf buildPartial() {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf result = new cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.symbolID_ = symbolID_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.fillColor_ = fillColor_;
				if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
					to_bitField0_ |= 0x00000004;
				}
				result.outlineColor_ = outlineColor_;
				if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
					to_bitField0_ |= 0x00000008;
				}
				result.lineWidth_ = lineWidth_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@Override
			public Builder clone() {
				return super.clone();
			}

			@Override
			public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
				return super.setField(field, value);
			}

			@Override
			public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
				return super.clearField(field);
			}

			@Override
			public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return super.clearOneof(oneof);
			}

			@Override
			public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
					Object value) {
				return super.setRepeatedField(field, index, value);
			}

			@Override
			public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
				return super.addRepeatedField(field, value);
			}

			@Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf) {
					return mergeFrom((cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf other) {
				if (other == cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf.getDefaultInstance())
					return this;
				if (other.hasSymbolID()) {
					setSymbolID(other.getSymbolID());
				}
				if (other.hasFillColor()) {
					bitField0_ |= 0x00000002;
					fillColor_ = other.fillColor_;
					onChanged();
				}
				if (other.hasOutlineColor()) {
					bitField0_ |= 0x00000004;
					outlineColor_ = other.outlineColor_;
					onChanged();
				}
				if (other.hasLineWidth()) {
					setLineWidth(other.getLineWidth());
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@Override
			public final boolean isInitialized() {
				if (!hasSymbolID()) {
					return false;
				}
				if (!hasFillColor()) {
					return false;
				}
				if (!hasOutlineColor()) {
					return false;
				}
				if (!hasLineWidth()) {
					return false;
				}
				return true;
			}

			@Override
			public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private int symbolID_;

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			@Override
			public boolean hasSymbolID() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			@Override
			public int getSymbolID() {
				return symbolID_;
			}

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			public Builder setSymbolID(int value) {
				bitField0_ |= 0x00000001;
				symbolID_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			public Builder clearSymbolID() {
				bitField0_ = (bitField0_ & ~0x00000001);
				symbolID_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object fillColor_ = "";

			/**
			 * <code>required string fillColor = 2;</code>
			 */
			@Override
			public boolean hasFillColor() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}

			/**
			 * <code>required string fillColor = 2;</code>
			 */
			@Override
			public java.lang.String getFillColor() {
				java.lang.Object ref = fillColor_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						fillColor_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string fillColor = 2;</code>
			 */
			@Override
			public com.google.protobuf.ByteString getFillColorBytes() {
				java.lang.Object ref = fillColor_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					fillColor_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string fillColor = 2;</code>
			 */
			public Builder setFillColor(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000002;
				fillColor_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string fillColor = 2;</code>
			 */
			public Builder clearFillColor() {
				bitField0_ = (bitField0_ & ~0x00000002);
				fillColor_ = getDefaultInstance().getFillColor();
				onChanged();
				return this;
			}

			/**
			 * <code>required string fillColor = 2;</code>
			 */
			public Builder setFillColorBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000002;
				fillColor_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object outlineColor_ = "";

			/**
			 * <code>required string outlineColor = 3;</code>
			 */
			@Override
			public boolean hasOutlineColor() {
				return ((bitField0_ & 0x00000004) == 0x00000004);
			}

			/**
			 * <code>required string outlineColor = 3;</code>
			 */
			@Override
			public java.lang.String getOutlineColor() {
				java.lang.Object ref = outlineColor_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						outlineColor_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string outlineColor = 3;</code>
			 */
			@Override
			public com.google.protobuf.ByteString getOutlineColorBytes() {
				java.lang.Object ref = outlineColor_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					outlineColor_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string outlineColor = 3;</code>
			 */
			public Builder setOutlineColor(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				outlineColor_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string outlineColor = 3;</code>
			 */
			public Builder clearOutlineColor() {
				bitField0_ = (bitField0_ & ~0x00000004);
				outlineColor_ = getDefaultInstance().getOutlineColor();
				onChanged();
				return this;
			}

			/**
			 * <code>required string outlineColor = 3;</code>
			 */
			public Builder setOutlineColorBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				outlineColor_ = value;
				onChanged();
				return this;
			}

			private float lineWidth_;

			/**
			 * <code>required float lineWidth = 4;</code>
			 */
			@Override
			public boolean hasLineWidth() {
				return ((bitField0_ & 0x00000008) == 0x00000008);
			}

			/**
			 * <code>required float lineWidth = 4;</code>
			 */
			@Override
			public float getLineWidth() {
				return lineWidth_;
			}

			/**
			 * <code>required float lineWidth = 4;</code>
			 */
			public Builder setLineWidth(float value) {
				bitField0_ |= 0x00000008;
				lineWidth_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required float lineWidth = 4;</code>
			 */
			public Builder clearLineWidth() {
				bitField0_ = (bitField0_ & ~0x00000008);
				lineWidth_ = 0F;
				onChanged();
				return this;
			}

			@Override
			public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFields(unknownFields);
			}

			@Override
			public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:cn.platalk.core.pbf.mapdata.TYFillSymbolPbf)
		}

		// @@protoc_insertion_point(class_scope:cn.platalk.core.pbf.mapdata.TYFillSymbolPbf)
		private static final cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf();
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		@java.lang.Deprecated
		public static final com.google.protobuf.Parser<TYFillSymbolPbf> PARSER = new com.google.protobuf.AbstractParser<TYFillSymbolPbf>() {
			@Override
			public TYFillSymbolPbf parsePartialFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new TYFillSymbolPbf(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<TYFillSymbolPbf> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<TYFillSymbolPbf> getParserForType() {
			return PARSER;
		}

		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYFillSymbolPbf getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	public interface TYIconSymbolPbfOrBuilder extends
			// @@protoc_insertion_point(interface_extends:cn.platalk.core.pbf.mapdata.TYIconSymbolPbf)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		boolean hasSymbolID();

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		int getSymbolID();

		/**
		 * <code>required string icon = 2;</code>
		 */
		boolean hasIcon();

		/**
		 * <code>required string icon = 2;</code>
		 */
		java.lang.String getIcon();

		/**
		 * <code>required string icon = 2;</code>
		 */
		com.google.protobuf.ByteString getIconBytes();
	}

	/**
	 * Protobuf type {@code cn.platalk.core.pbf.mapdata.TYIconSymbolPbf}
	 */
	public static final class TYIconSymbolPbf extends com.google.protobuf.GeneratedMessageV3 implements
			// @@protoc_insertion_point(message_implements:cn.platalk.core.pbf.mapdata.TYIconSymbolPbf)
			TYIconSymbolPbfOrBuilder {
		// Use TYIconSymbolPbf.newBuilder() to construct.
		private TYIconSymbolPbf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
			super(builder);
		}

		private TYIconSymbolPbf() {
			symbolID_ = 0;
			icon_ = "";
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private TYIconSymbolPbf(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			this();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					default: {
						if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					case 8: {
						bitField0_ |= 0x00000001;
						symbolID_ = input.readUInt32();
						break;
					}
					case 18: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000002;
						icon_ = bs;
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
			} finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_descriptor;
		}

		@Override
		protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
			return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_fieldAccessorTable
					.ensureFieldAccessorsInitialized(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.class,
							cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder.class);
		}

		private int bitField0_;
		public static final int SYMBOLID_FIELD_NUMBER = 1;
		private int symbolID_;

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		@Override
		public boolean hasSymbolID() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required uint32 symbolID = 1;</code>
		 */
		@Override
		public int getSymbolID() {
			return symbolID_;
		}

		public static final int ICON_FIELD_NUMBER = 2;
		private volatile java.lang.Object icon_;

		/**
		 * <code>required string icon = 2;</code>
		 */
		@Override
		public boolean hasIcon() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}

		/**
		 * <code>required string icon = 2;</code>
		 */
		@Override
		public java.lang.String getIcon() {
			java.lang.Object ref = icon_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					icon_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string icon = 2;</code>
		 */
		@Override
		public com.google.protobuf.ByteString getIconBytes() {
			java.lang.Object ref = icon_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
				icon_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		private byte memoizedIsInitialized = -1;

		@Override
		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			if (!hasSymbolID()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasIcon()) {
				memoizedIsInitialized = 0;
				return false;
			}
			memoizedIsInitialized = 1;
			return true;
		}

		@Override
		public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeUInt32(1, symbolID_);
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				com.google.protobuf.GeneratedMessageV3.writeString(output, 2, icon_);
			}
			unknownFields.writeTo(output);
		}

		@Override
		public int getSerializedSize() {
			int size = memoizedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream.computeUInt32Size(1, symbolID_);
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, icon_);
			}
			size += unknownFields.getSerializedSize();
			memoizedSize = size;
			return size;
		}

		private static final long serialVersionUID = 0L;

		@java.lang.Override
		public boolean equals(final java.lang.Object obj) {
			if (obj == this) {
				return true;
			}
			if (!(obj instanceof cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf)) {
				return super.equals(obj);
			}
			cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf other = (cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf) obj;

			boolean result = true;
			result = result && (hasSymbolID() == other.hasSymbolID());
			if (hasSymbolID()) {
				result = result && (getSymbolID() == other.getSymbolID());
			}
			result = result && (hasIcon() == other.hasIcon());
			if (hasIcon()) {
				result = result && getIcon().equals(other.getIcon());
			}
			result = result && unknownFields.equals(other.unknownFields);
			return result;
		}

		@java.lang.Override
		public int hashCode() {
			if (memoizedHashCode != 0) {
				return memoizedHashCode;
			}
			int hash = 41;
			hash = (19 * hash) + getDescriptor().hashCode();
			if (hasSymbolID()) {
				hash = (37 * hash) + SYMBOLID_FIELD_NUMBER;
				hash = (53 * hash) + getSymbolID();
			}
			if (hasIcon()) {
				hash = (37 * hash) + ICON_FIELD_NUMBER;
				hash = (53 * hash) + getIcon().hashCode();
			}
			hash = (29 * hash) + unknownFields.hashCode();
			memoizedHashCode = hash;
			return hash;
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(
				com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(
				com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseDelimitedFrom(
				java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input,
					extensionRegistry);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(
				com.google.protobuf.CodedInputStream input) throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parseFrom(
				com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
		}

		@Override
		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder() {
			return DEFAULT_INSTANCE.toBuilder();
		}

		public static Builder newBuilder(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf prototype) {
			return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
		}

		@Override
		public Builder toBuilder() {
			return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code cn.platalk.core.pbf.mapdata.TYIconSymbolPbf}
		 */
		public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:cn.platalk.core.pbf.mapdata.TYIconSymbolPbf)
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbfOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_descriptor;
			}

			@Override
			protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_fieldAccessorTable
						.ensureFieldAccessorsInitialized(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.class,
								cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.Builder.class);
			}

			// Construct using
			// cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {
				}
			}

			@Override
			public Builder clear() {
				super.clear();
				symbolID_ = 0;
				bitField0_ = (bitField0_ & ~0x00000001);
				icon_ = "";
				bitField0_ = (bitField0_ & ~0x00000002);
				return this;
			}

			@Override
			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_descriptor;
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf getDefaultInstanceForType() {
				return cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.getDefaultInstance();
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf build() {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			@Override
			public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf buildPartial() {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf result = new cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.symbolID_ = symbolID_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.icon_ = icon_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			@Override
			public Builder clone() {
				return super.clone();
			}

			@Override
			public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
				return super.setField(field, value);
			}

			@Override
			public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
				return super.clearField(field);
			}

			@Override
			public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
				return super.clearOneof(oneof);
			}

			@Override
			public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
					Object value) {
				return super.setRepeatedField(field, index, value);
			}

			@Override
			public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, Object value) {
				return super.addRepeatedField(field, value);
			}

			@Override
			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf) {
					return mergeFrom((cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf other) {
				if (other == cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf.getDefaultInstance())
					return this;
				if (other.hasSymbolID()) {
					setSymbolID(other.getSymbolID());
				}
				if (other.hasIcon()) {
					bitField0_ |= 0x00000002;
					icon_ = other.icon_;
					onChanged();
				}
				this.mergeUnknownFields(other.unknownFields);
				onChanged();
				return this;
			}

			@Override
			public final boolean isInitialized() {
				if (!hasSymbolID()) {
					return false;
				}
				if (!hasIcon()) {
					return false;
				}
				return true;
			}

			@Override
			public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
				cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf) e.getUnfinishedMessage();
					throw e.unwrapIOException();
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private int symbolID_;

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			@Override
			public boolean hasSymbolID() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			@Override
			public int getSymbolID() {
				return symbolID_;
			}

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			public Builder setSymbolID(int value) {
				bitField0_ |= 0x00000001;
				symbolID_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint32 symbolID = 1;</code>
			 */
			public Builder clearSymbolID() {
				bitField0_ = (bitField0_ & ~0x00000001);
				symbolID_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object icon_ = "";

			/**
			 * <code>required string icon = 2;</code>
			 */
			@Override
			public boolean hasIcon() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}

			/**
			 * <code>required string icon = 2;</code>
			 */
			@Override
			public java.lang.String getIcon() {
				java.lang.Object ref = icon_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						icon_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string icon = 2;</code>
			 */
			@Override
			public com.google.protobuf.ByteString getIconBytes() {
				java.lang.Object ref = icon_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					icon_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string icon = 2;</code>
			 */
			public Builder setIcon(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000002;
				icon_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string icon = 2;</code>
			 */
			public Builder clearIcon() {
				bitField0_ = (bitField0_ & ~0x00000002);
				icon_ = getDefaultInstance().getIcon();
				onChanged();
				return this;
			}

			/**
			 * <code>required string icon = 2;</code>
			 */
			public Builder setIconBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000002;
				icon_ = value;
				onChanged();
				return this;
			}

			@Override
			public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.setUnknownFields(unknownFields);
			}

			@Override
			public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
				return super.mergeUnknownFields(unknownFields);
			}

			// @@protoc_insertion_point(builder_scope:cn.platalk.core.pbf.mapdata.TYIconSymbolPbf)
		}

		// @@protoc_insertion_point(class_scope:cn.platalk.core.pbf.mapdata.TYIconSymbolPbf)
		private static final cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf DEFAULT_INSTANCE;
		static {
			DEFAULT_INSTANCE = new cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf();
		}

		public static cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf getDefaultInstance() {
			return DEFAULT_INSTANCE;
		}

		@java.lang.Deprecated
		public static final com.google.protobuf.Parser<TYIconSymbolPbf> PARSER = new com.google.protobuf.AbstractParser<TYIconSymbolPbf>() {
			@Override
			public TYIconSymbolPbf parsePartialFrom(com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new TYIconSymbolPbf(input, extensionRegistry);
			}
		};

		public static com.google.protobuf.Parser<TYIconSymbolPbf> parser() {
			return PARSER;
		}

		@java.lang.Override
		public com.google.protobuf.Parser<TYIconSymbolPbf> getParserForType() {
			return PARSER;
		}

		@Override
		public cn.platalk.core.pbf.mapdata.TYSymbolPbf.TYIconSymbolPbf getDefaultInstanceForType() {
			return DEFAULT_INSTANCE;
		}

	}

	private static final com.google.protobuf.Descriptors.Descriptor internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_descriptor;
	private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_descriptor;
	private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_fieldAccessorTable;
	private static final com.google.protobuf.Descriptors.Descriptor internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_descriptor;
	private static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_fieldAccessorTable;

	public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
		return descriptor;
	}

	private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
	static {
		java.lang.String[] descriptorData = { "\n\024t_y_symbol_pbf.proto\022\033cn.platalk.core."
				+ "pbf.mapdata\"\254\001\n\025TYRenderingSymbolsPbf\022\r\n"
				+ "\005mapID\030\001 \002(\t\022A\n\013fillSymbols\030\002 \003(\0132,.cn.p"
				+ "latalk.core.pbf.mapdata.TYFillSymbolPbf\022"
				+ "A\n\013iconSymbols\030\003 \003(\0132,.cn.platalk.core.p"
				+ "bf.mapdata.TYIconSymbolPbf\"_\n\017TYFillSymb"
				+ "olPbf\022\020\n\010symbolID\030\001 \002(\r\022\021\n\tfillColor\030\002 \002"
				+ "(\t\022\024\n\014outlineColor\030\003 \002(\t\022\021\n\tlineWidth\030\004 "
				+ "\002(\002\"1\n\017TYIconSymbolPbf\022\020\n\010symbolID\030\001 \002(\r"
				+ "\022\014\n\004icon\030\002 \002(\t" };
		com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
			@Override
			public com.google.protobuf.ExtensionRegistry assignDescriptors(
					com.google.protobuf.Descriptors.FileDescriptor root) {
				descriptor = root;
				return null;
			}
		};
		com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
				new com.google.protobuf.Descriptors.FileDescriptor[] {}, assigner);
		internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_descriptor = getDescriptor().getMessageTypes()
				.get(0);
		internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_cn_platalk_core_pbf_mapdata_TYRenderingSymbolsPbf_descriptor,
				new java.lang.String[] { "MapID", "FillSymbols", "IconSymbols", });
		internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_descriptor = getDescriptor().getMessageTypes()
				.get(1);
		internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_cn_platalk_core_pbf_mapdata_TYFillSymbolPbf_descriptor,
				new java.lang.String[] { "SymbolID", "FillColor", "OutlineColor", "LineWidth", });
		internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_descriptor = getDescriptor().getMessageTypes()
				.get(2);
		internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
				internal_static_cn_platalk_core_pbf_mapdata_TYIconSymbolPbf_descriptor,
				new java.lang.String[] { "SymbolID", "Icon", });
	}

	// @@protoc_insertion_point(outer_class_scope)
}
